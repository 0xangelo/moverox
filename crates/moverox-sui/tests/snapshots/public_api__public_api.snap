---
source: crates/moverox-sui/tests/public-api.rs
expression: public_api
---
pub mod moverox_sui
pub mod moverox_sui::move_stdlib
pub mod moverox_sui::move_stdlib::ascii
pub struct moverox_sui::move_stdlib::ascii::Char
pub moverox_sui::move_stdlib::ascii::Char::byte: u8
impl moverox_sui::move_stdlib::ascii::Char
pub const fn moverox_sui::move_stdlib::ascii::Char::new(byte: u8) -> Self
impl moverox_sui::move_stdlib::ascii::Char
pub const fn moverox_sui::move_stdlib::ascii::Char::type_tag() -> moverox_sui::move_stdlib::ascii::CharTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::ascii::Char
pub const moverox_sui::move_stdlib::ascii::Char::STRUCT_TAG: moverox_sui::move_stdlib::ascii::CharTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::ascii::Char
pub type moverox_sui::move_stdlib::ascii::Char::StructTag = moverox_sui::move_stdlib::ascii::CharTypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::ascii::Char
pub type moverox_sui::move_stdlib::ascii::Char::TypeTag = moverox_sui::move_stdlib::ascii::CharTypeTag
pub struct moverox_sui::move_stdlib::ascii::CharTypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::ascii::CharTypeTag
pub fn moverox_sui::move_stdlib::ascii::CharTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::ascii::CharTypeTag
pub type moverox_sui::move_stdlib::ascii::CharTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::ascii::CharTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::ascii::CharTypeTag
pub const moverox_sui::move_stdlib::ascii::CharTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::ascii::CharTypeTag
pub const moverox_sui::move_stdlib::ascii::CharTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::ascii::CharTypeTag
pub const moverox_sui::move_stdlib::ascii::CharTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::ascii::CharTypeTag
pub fn moverox_sui::move_stdlib::ascii::CharTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::ascii::CharTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::ascii::CharTypeTag
pub fn moverox_sui::move_stdlib::ascii::CharTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::ascii::CharTypeTag
pub fn moverox_sui::move_stdlib::ascii::CharTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::move_stdlib::ascii::String
pub moverox_sui::move_stdlib::ascii::String::bytes: alloc::vec::Vec<u8>
impl moverox_sui::move_stdlib::ascii::String
pub const fn moverox_sui::move_stdlib::ascii::String::new(bytes: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::move_stdlib::ascii::String
pub const fn moverox_sui::move_stdlib::ascii::String::type_tag() -> moverox_sui::move_stdlib::ascii::StringTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::ascii::String
pub const moverox_sui::move_stdlib::ascii::String::STRUCT_TAG: moverox_sui::move_stdlib::ascii::StringTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::ascii::String
pub type moverox_sui::move_stdlib::ascii::String::StructTag = moverox_sui::move_stdlib::ascii::StringTypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::ascii::String
pub type moverox_sui::move_stdlib::ascii::String::TypeTag = moverox_sui::move_stdlib::ascii::StringTypeTag
pub struct moverox_sui::move_stdlib::ascii::StringTypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::ascii::StringTypeTag
pub fn moverox_sui::move_stdlib::ascii::StringTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::ascii::StringTypeTag
pub type moverox_sui::move_stdlib::ascii::StringTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::ascii::StringTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::ascii::StringTypeTag
pub const moverox_sui::move_stdlib::ascii::StringTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::ascii::StringTypeTag
pub const moverox_sui::move_stdlib::ascii::StringTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::ascii::StringTypeTag
pub const moverox_sui::move_stdlib::ascii::StringTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::ascii::StringTypeTag
pub fn moverox_sui::move_stdlib::ascii::StringTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::ascii::StringTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::ascii::StringTypeTag
pub fn moverox_sui::move_stdlib::ascii::StringTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::ascii::StringTypeTag
pub fn moverox_sui::move_stdlib::ascii::StringTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::move_stdlib::bit_vector
pub struct moverox_sui::move_stdlib::bit_vector::BitVector
pub moverox_sui::move_stdlib::bit_vector::BitVector::bit_field: alloc::vec::Vec<bool>
pub moverox_sui::move_stdlib::bit_vector::BitVector::length: u64
impl moverox_sui::move_stdlib::bit_vector::BitVector
pub const fn moverox_sui::move_stdlib::bit_vector::BitVector::new(length: u64, bit_field: alloc::vec::Vec<bool>) -> Self
impl moverox_sui::move_stdlib::bit_vector::BitVector
pub const fn moverox_sui::move_stdlib::bit_vector::BitVector::type_tag() -> moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::bit_vector::BitVector
pub const moverox_sui::move_stdlib::bit_vector::BitVector::STRUCT_TAG: moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::bit_vector::BitVector
pub type moverox_sui::move_stdlib::bit_vector::BitVector::StructTag = moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::bit_vector::BitVector
pub type moverox_sui::move_stdlib::bit_vector::BitVector::TypeTag = moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub struct moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub fn moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub type moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub const moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub const moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub const moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub fn moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub fn moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag
pub fn moverox_sui::move_stdlib::bit_vector::BitVectorTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::move_stdlib::fixed_point32
pub struct moverox_sui::move_stdlib::fixed_point32::FixedPoint32
pub moverox_sui::move_stdlib::fixed_point32::FixedPoint32::value: u64
impl moverox_sui::move_stdlib::fixed_point32::FixedPoint32
pub const fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32::new(value: u64) -> Self
impl moverox_sui::move_stdlib::fixed_point32::FixedPoint32
pub const fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32::type_tag() -> moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::fixed_point32::FixedPoint32
pub const moverox_sui::move_stdlib::fixed_point32::FixedPoint32::STRUCT_TAG: moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::fixed_point32::FixedPoint32
pub type moverox_sui::move_stdlib::fixed_point32::FixedPoint32::StructTag = moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::fixed_point32::FixedPoint32
pub type moverox_sui::move_stdlib::fixed_point32::FixedPoint32::TypeTag = moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub struct moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub type moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub const moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub const moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub const moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag
pub fn moverox_sui::move_stdlib::fixed_point32::FixedPoint32TypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::move_stdlib::option
pub struct moverox_sui::move_stdlib::option::Option<Element>
pub moverox_sui::move_stdlib::option::Option::vec: alloc::vec::Vec<Element>
impl<Element: moverox_traits::MoveType> moverox_sui::move_stdlib::option::Option<Element>
pub const fn moverox_sui::move_stdlib::option::Option<Element>::type_tag(type_element: <Element as moverox_traits::MoveType>::TypeTag) -> moverox_sui::move_stdlib::option::OptionTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
impl<Element> moverox_sui::move_stdlib::option::Option<Element>
pub const fn moverox_sui::move_stdlib::option::Option<Element>::new(vec: alloc::vec::Vec<Element>) -> Self
impl<Element: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::move_stdlib::option::Option<Element>
pub const moverox_sui::move_stdlib::option::Option<Element>::STRUCT_TAG: moverox_sui::move_stdlib::option::OptionTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
impl<Element: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::move_stdlib::option::Option<Element>
pub type moverox_sui::move_stdlib::option::Option<Element>::StructTag = moverox_sui::move_stdlib::option::OptionTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
impl<Element: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::move_stdlib::option::Option<Element>
pub type moverox_sui::move_stdlib::option::Option<Element>::TypeTag = moverox_sui::move_stdlib::option::OptionTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::move_stdlib::option::OptionTypeTag<Element: moverox_traits::MoveTypeTag>
pub moverox_sui::move_stdlib::option::OptionTypeTag::type_element: Element
impl<'de, Element: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub fn moverox_sui::move_stdlib::option::OptionTypeTag<Element>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<Element: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub fn moverox_sui::move_stdlib::option::OptionTypeTag<Element>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<Element: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub type moverox_sui::move_stdlib::option::OptionTypeTag<Element>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::option::OptionTypeTag<Element>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub const moverox_sui::move_stdlib::option::OptionTypeTag<Element>::ADDRESS: moverox_types::address::Address
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub const moverox_sui::move_stdlib::option::OptionTypeTag<Element>::MODULE: &moverox_types::ident_str::IdentStr
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub const moverox_sui::move_stdlib::option::OptionTypeTag<Element>::NAME: &moverox_types::ident_str::IdentStr
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub fn moverox_sui::move_stdlib::option::OptionTypeTag<Element>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::option::OptionTypeTag<Element>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<Element: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::move_stdlib::option::OptionTypeTag<Element>
pub fn moverox_sui::move_stdlib::option::OptionTypeTag<Element>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::move_stdlib::string
pub struct moverox_sui::move_stdlib::string::String
pub moverox_sui::move_stdlib::string::String::bytes: alloc::vec::Vec<u8>
impl moverox_sui::move_stdlib::string::String
pub const fn moverox_sui::move_stdlib::string::String::new(bytes: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::move_stdlib::string::String
pub const fn moverox_sui::move_stdlib::string::String::type_tag() -> moverox_sui::move_stdlib::string::StringTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::string::String
pub const moverox_sui::move_stdlib::string::String::STRUCT_TAG: moverox_sui::move_stdlib::string::StringTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::string::String
pub type moverox_sui::move_stdlib::string::String::StructTag = moverox_sui::move_stdlib::string::StringTypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::string::String
pub type moverox_sui::move_stdlib::string::String::TypeTag = moverox_sui::move_stdlib::string::StringTypeTag
pub struct moverox_sui::move_stdlib::string::StringTypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::string::StringTypeTag
pub fn moverox_sui::move_stdlib::string::StringTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::string::StringTypeTag
pub type moverox_sui::move_stdlib::string::StringTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::string::StringTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::string::StringTypeTag
pub const moverox_sui::move_stdlib::string::StringTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::string::StringTypeTag
pub const moverox_sui::move_stdlib::string::StringTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::string::StringTypeTag
pub const moverox_sui::move_stdlib::string::StringTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::string::StringTypeTag
pub fn moverox_sui::move_stdlib::string::StringTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::string::StringTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::string::StringTypeTag
pub fn moverox_sui::move_stdlib::string::StringTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::string::StringTypeTag
pub fn moverox_sui::move_stdlib::string::StringTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::move_stdlib::type_name
pub struct moverox_sui::move_stdlib::type_name::TypeName
pub moverox_sui::move_stdlib::type_name::TypeName::name: moverox_sui::move_stdlib::ascii::String
impl moverox_sui::move_stdlib::type_name::TypeName
pub const fn moverox_sui::move_stdlib::type_name::TypeName::new(name: moverox_sui::move_stdlib::ascii::String) -> Self
impl moverox_sui::move_stdlib::type_name::TypeName
pub const fn moverox_sui::move_stdlib::type_name::TypeName::type_tag() -> moverox_sui::move_stdlib::type_name::TypeNameTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::type_name::TypeName
pub const moverox_sui::move_stdlib::type_name::TypeName::STRUCT_TAG: moverox_sui::move_stdlib::type_name::TypeNameTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::type_name::TypeName
pub type moverox_sui::move_stdlib::type_name::TypeName::StructTag = moverox_sui::move_stdlib::type_name::TypeNameTypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::type_name::TypeName
pub type moverox_sui::move_stdlib::type_name::TypeName::TypeTag = moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub struct moverox_sui::move_stdlib::type_name::TypeNameTypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub fn moverox_sui::move_stdlib::type_name::TypeNameTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub type moverox_sui::move_stdlib::type_name::TypeNameTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::type_name::TypeNameTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub const moverox_sui::move_stdlib::type_name::TypeNameTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub const moverox_sui::move_stdlib::type_name::TypeNameTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub const moverox_sui::move_stdlib::type_name::TypeNameTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub fn moverox_sui::move_stdlib::type_name::TypeNameTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::type_name::TypeNameTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub fn moverox_sui::move_stdlib::type_name::TypeNameTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::type_name::TypeNameTypeTag
pub fn moverox_sui::move_stdlib::type_name::TypeNameTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::move_stdlib::uq32_32
pub struct moverox_sui::move_stdlib::uq32_32::UQ32_32(pub u64)
impl moverox_sui::move_stdlib::uq32_32::UQ32_32
pub const fn moverox_sui::move_stdlib::uq32_32::UQ32_32::new(_0: u64) -> Self
impl moverox_sui::move_stdlib::uq32_32::UQ32_32
pub const fn moverox_sui::move_stdlib::uq32_32::UQ32_32::type_tag() -> moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::uq32_32::UQ32_32
pub const moverox_sui::move_stdlib::uq32_32::UQ32_32::STRUCT_TAG: moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::uq32_32::UQ32_32
pub type moverox_sui::move_stdlib::uq32_32::UQ32_32::StructTag = moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::uq32_32::UQ32_32
pub type moverox_sui::move_stdlib::uq32_32::UQ32_32::TypeTag = moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub struct moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub fn moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub type moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub const moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub const moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub const moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub fn moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub fn moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag
pub fn moverox_sui::move_stdlib::uq32_32::UQ32_32TypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::move_stdlib::uq64_64
pub struct moverox_sui::move_stdlib::uq64_64::UQ64_64(pub u128)
impl moverox_sui::move_stdlib::uq64_64::UQ64_64
pub const fn moverox_sui::move_stdlib::uq64_64::UQ64_64::new(_0: u128) -> Self
impl moverox_sui::move_stdlib::uq64_64::UQ64_64
pub const fn moverox_sui::move_stdlib::uq64_64::UQ64_64::type_tag() -> moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
impl moverox_traits::ConstStructTag for moverox_sui::move_stdlib::uq64_64::UQ64_64
pub const moverox_sui::move_stdlib::uq64_64::UQ64_64::STRUCT_TAG: moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
impl moverox_traits::MoveDatatype for moverox_sui::move_stdlib::uq64_64::UQ64_64
pub type moverox_sui::move_stdlib::uq64_64::UQ64_64::StructTag = moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
impl moverox_traits::MoveType for moverox_sui::move_stdlib::uq64_64::UQ64_64
pub type moverox_sui::move_stdlib::uq64_64::UQ64_64::TypeTag = moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub struct moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
impl core::fmt::Display for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub fn moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub type moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub const moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub const moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub const moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub fn moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub fn moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag
pub fn moverox_sui::move_stdlib::uq64_64::UQ64_64TypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui
pub mod moverox_sui::sui::accumulator
pub struct moverox_sui::sui::accumulator::AccumulatorRoot
pub moverox_sui::sui::accumulator::AccumulatorRoot::id: moverox_sui::sui::object::UID
impl moverox_sui::sui::accumulator::AccumulatorRoot
pub const fn moverox_sui::sui::accumulator::AccumulatorRoot::new(id: moverox_sui::sui::object::UID) -> Self
impl moverox_sui::sui::accumulator::AccumulatorRoot
pub const fn moverox_sui::sui::accumulator::AccumulatorRoot::type_tag() -> moverox_sui::sui::accumulator::AccumulatorRootTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::accumulator::AccumulatorRoot
pub const moverox_sui::sui::accumulator::AccumulatorRoot::STRUCT_TAG: moverox_sui::sui::accumulator::AccumulatorRootTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::accumulator::AccumulatorRoot
pub fn moverox_sui::sui::accumulator::AccumulatorRoot::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::accumulator::AccumulatorRoot
pub type moverox_sui::sui::accumulator::AccumulatorRoot::StructTag = moverox_sui::sui::accumulator::AccumulatorRootTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::accumulator::AccumulatorRoot
pub type moverox_sui::sui::accumulator::AccumulatorRoot::TypeTag = moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub struct moverox_sui::sui::accumulator::AccumulatorRootTypeTag
impl core::fmt::Display for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub fn moverox_sui::sui::accumulator::AccumulatorRootTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub type moverox_sui::sui::accumulator::AccumulatorRootTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::accumulator::AccumulatorRootTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub const moverox_sui::sui::accumulator::AccumulatorRootTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub const moverox_sui::sui::accumulator::AccumulatorRootTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub const moverox_sui::sui::accumulator::AccumulatorRootTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub fn moverox_sui::sui::accumulator::AccumulatorRootTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::accumulator::AccumulatorRootTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub fn moverox_sui::sui::accumulator::AccumulatorRootTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::accumulator::AccumulatorRootTypeTag
pub fn moverox_sui::sui::accumulator::AccumulatorRootTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::authenticator_state
pub struct moverox_sui::sui::authenticator_state::ActiveJwk
pub moverox_sui::sui::authenticator_state::ActiveJwk::epoch: u64
pub moverox_sui::sui::authenticator_state::ActiveJwk::jwk: moverox_sui::sui::authenticator_state::JWK
pub moverox_sui::sui::authenticator_state::ActiveJwk::jwk_id: moverox_sui::sui::authenticator_state::JwkId
impl moverox_sui::sui::authenticator_state::ActiveJwk
pub const fn moverox_sui::sui::authenticator_state::ActiveJwk::new(jwk_id: moverox_sui::sui::authenticator_state::JwkId, jwk: moverox_sui::sui::authenticator_state::JWK, epoch: u64) -> Self
impl moverox_sui::sui::authenticator_state::ActiveJwk
pub const fn moverox_sui::sui::authenticator_state::ActiveJwk::type_tag() -> moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::authenticator_state::ActiveJwk
pub const moverox_sui::sui::authenticator_state::ActiveJwk::STRUCT_TAG: moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::authenticator_state::ActiveJwk
pub type moverox_sui::sui::authenticator_state::ActiveJwk::StructTag = moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::authenticator_state::ActiveJwk
pub type moverox_sui::sui::authenticator_state::ActiveJwk::TypeTag = moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub struct moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
impl core::fmt::Display for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub fn moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub type moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub const moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub const moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub const moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub fn moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub fn moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::authenticator_state::ActiveJwkTypeTag
pub fn moverox_sui::sui::authenticator_state::ActiveJwkTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::authenticator_state::AuthenticatorState
pub moverox_sui::sui::authenticator_state::AuthenticatorState::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::authenticator_state::AuthenticatorState::version: u64
impl moverox_sui::sui::authenticator_state::AuthenticatorState
pub const fn moverox_sui::sui::authenticator_state::AuthenticatorState::new(id: moverox_sui::sui::object::UID, version: u64) -> Self
impl moverox_sui::sui::authenticator_state::AuthenticatorState
pub const fn moverox_sui::sui::authenticator_state::AuthenticatorState::type_tag() -> moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::authenticator_state::AuthenticatorState
pub const moverox_sui::sui::authenticator_state::AuthenticatorState::STRUCT_TAG: moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::authenticator_state::AuthenticatorState
pub fn moverox_sui::sui::authenticator_state::AuthenticatorState::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::authenticator_state::AuthenticatorState
pub type moverox_sui::sui::authenticator_state::AuthenticatorState::StructTag = moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::authenticator_state::AuthenticatorState
pub type moverox_sui::sui::authenticator_state::AuthenticatorState::TypeTag = moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub struct moverox_sui::sui::authenticator_state::AuthenticatorStateInner
pub moverox_sui::sui::authenticator_state::AuthenticatorStateInner::active_jwks: alloc::vec::Vec<moverox_sui::sui::authenticator_state::ActiveJwk>
pub moverox_sui::sui::authenticator_state::AuthenticatorStateInner::version: u64
impl moverox_sui::sui::authenticator_state::AuthenticatorStateInner
pub const fn moverox_sui::sui::authenticator_state::AuthenticatorStateInner::new(version: u64, active_jwks: alloc::vec::Vec<moverox_sui::sui::authenticator_state::ActiveJwk>) -> Self
impl moverox_sui::sui::authenticator_state::AuthenticatorStateInner
pub const fn moverox_sui::sui::authenticator_state::AuthenticatorStateInner::type_tag() -> moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::authenticator_state::AuthenticatorStateInner
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateInner::STRUCT_TAG: moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::authenticator_state::AuthenticatorStateInner
pub type moverox_sui::sui::authenticator_state::AuthenticatorStateInner::StructTag = moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::authenticator_state::AuthenticatorStateInner
pub type moverox_sui::sui::authenticator_state::AuthenticatorStateInner::TypeTag = moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub struct moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
impl core::fmt::Display for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub type moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateInnerTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
impl core::fmt::Display for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub type moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub const moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag
pub fn moverox_sui::sui::authenticator_state::AuthenticatorStateTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::authenticator_state::JWK
pub moverox_sui::sui::authenticator_state::JWK::alg: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::authenticator_state::JWK::e: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::authenticator_state::JWK::kty: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::authenticator_state::JWK::n: moverox_sui::move_stdlib::string::String
impl moverox_sui::sui::authenticator_state::JWK
pub const fn moverox_sui::sui::authenticator_state::JWK::new(kty: moverox_sui::move_stdlib::string::String, e: moverox_sui::move_stdlib::string::String, n: moverox_sui::move_stdlib::string::String, alg: moverox_sui::move_stdlib::string::String) -> Self
impl moverox_sui::sui::authenticator_state::JWK
pub const fn moverox_sui::sui::authenticator_state::JWK::type_tag() -> moverox_sui::sui::authenticator_state::JWKTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::authenticator_state::JWK
pub const moverox_sui::sui::authenticator_state::JWK::STRUCT_TAG: moverox_sui::sui::authenticator_state::JWKTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::authenticator_state::JWK
pub type moverox_sui::sui::authenticator_state::JWK::StructTag = moverox_sui::sui::authenticator_state::JWKTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::authenticator_state::JWK
pub type moverox_sui::sui::authenticator_state::JWK::TypeTag = moverox_sui::sui::authenticator_state::JWKTypeTag
pub struct moverox_sui::sui::authenticator_state::JWKTypeTag
impl core::fmt::Display for moverox_sui::sui::authenticator_state::JWKTypeTag
pub fn moverox_sui::sui::authenticator_state::JWKTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::authenticator_state::JWKTypeTag
pub type moverox_sui::sui::authenticator_state::JWKTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::authenticator_state::JWKTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::authenticator_state::JWKTypeTag
pub const moverox_sui::sui::authenticator_state::JWKTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::authenticator_state::JWKTypeTag
pub const moverox_sui::sui::authenticator_state::JWKTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::authenticator_state::JWKTypeTag
pub const moverox_sui::sui::authenticator_state::JWKTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::authenticator_state::JWKTypeTag
pub fn moverox_sui::sui::authenticator_state::JWKTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::authenticator_state::JWKTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::authenticator_state::JWKTypeTag
pub fn moverox_sui::sui::authenticator_state::JWKTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::authenticator_state::JWKTypeTag
pub fn moverox_sui::sui::authenticator_state::JWKTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::authenticator_state::JwkId
pub moverox_sui::sui::authenticator_state::JwkId::iss: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::authenticator_state::JwkId::kid: moverox_sui::move_stdlib::string::String
impl moverox_sui::sui::authenticator_state::JwkId
pub const fn moverox_sui::sui::authenticator_state::JwkId::new(iss: moverox_sui::move_stdlib::string::String, kid: moverox_sui::move_stdlib::string::String) -> Self
impl moverox_sui::sui::authenticator_state::JwkId
pub const fn moverox_sui::sui::authenticator_state::JwkId::type_tag() -> moverox_sui::sui::authenticator_state::JwkIdTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::authenticator_state::JwkId
pub const moverox_sui::sui::authenticator_state::JwkId::STRUCT_TAG: moverox_sui::sui::authenticator_state::JwkIdTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::authenticator_state::JwkId
pub type moverox_sui::sui::authenticator_state::JwkId::StructTag = moverox_sui::sui::authenticator_state::JwkIdTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::authenticator_state::JwkId
pub type moverox_sui::sui::authenticator_state::JwkId::TypeTag = moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub struct moverox_sui::sui::authenticator_state::JwkIdTypeTag
impl core::fmt::Display for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub fn moverox_sui::sui::authenticator_state::JwkIdTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub type moverox_sui::sui::authenticator_state::JwkIdTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::authenticator_state::JwkIdTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub const moverox_sui::sui::authenticator_state::JwkIdTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub const moverox_sui::sui::authenticator_state::JwkIdTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub const moverox_sui::sui::authenticator_state::JwkIdTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub fn moverox_sui::sui::authenticator_state::JwkIdTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::authenticator_state::JwkIdTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub fn moverox_sui::sui::authenticator_state::JwkIdTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::authenticator_state::JwkIdTypeTag
pub fn moverox_sui::sui::authenticator_state::JwkIdTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::bag
pub struct moverox_sui::sui::bag::Bag
pub moverox_sui::sui::bag::Bag::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::bag::Bag::size: u64
impl moverox_sui::sui::bag::Bag
pub const fn moverox_sui::sui::bag::Bag::new(id: moverox_sui::sui::object::UID, size: u64) -> Self
impl moverox_sui::sui::bag::Bag
pub const fn moverox_sui::sui::bag::Bag::type_tag() -> moverox_sui::sui::bag::BagTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::bag::Bag
pub const moverox_sui::sui::bag::Bag::STRUCT_TAG: moverox_sui::sui::bag::BagTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::bag::Bag
pub fn moverox_sui::sui::bag::Bag::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::bag::Bag
pub type moverox_sui::sui::bag::Bag::StructTag = moverox_sui::sui::bag::BagTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::bag::Bag
pub type moverox_sui::sui::bag::Bag::TypeTag = moverox_sui::sui::bag::BagTypeTag
pub struct moverox_sui::sui::bag::BagTypeTag
impl core::fmt::Display for moverox_sui::sui::bag::BagTypeTag
pub fn moverox_sui::sui::bag::BagTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::bag::BagTypeTag
pub type moverox_sui::sui::bag::BagTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::bag::BagTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::bag::BagTypeTag
pub const moverox_sui::sui::bag::BagTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::bag::BagTypeTag
pub const moverox_sui::sui::bag::BagTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::bag::BagTypeTag
pub const moverox_sui::sui::bag::BagTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::bag::BagTypeTag
pub fn moverox_sui::sui::bag::BagTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::bag::BagTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::bag::BagTypeTag
pub fn moverox_sui::sui::bag::BagTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::bag::BagTypeTag
pub fn moverox_sui::sui::bag::BagTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::balance
pub struct moverox_sui::sui::balance::Balance<T>
pub moverox_sui::sui::balance::Balance::value: u64
impl<T: moverox_traits::MoveType> moverox_sui::sui::balance::Balance<T>
pub const fn moverox_sui::sui::balance::Balance<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::balance::BalanceTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::balance::Balance<T>
pub const fn moverox_sui::sui::balance::Balance<T>::new(value: u64) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::balance::Balance<T>
pub const moverox_sui::sui::balance::Balance<T>::STRUCT_TAG: moverox_sui::sui::balance::BalanceTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::balance::Balance<T>
pub type moverox_sui::sui::balance::Balance<T>::StructTag = moverox_sui::sui::balance::BalanceTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::balance::Balance<T>
pub type moverox_sui::sui::balance::Balance<T>::TypeTag = moverox_sui::sui::balance::BalanceTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::balance::BalanceTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::balance::BalanceTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::balance::BalanceTypeTag<T>
pub fn moverox_sui::sui::balance::BalanceTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::balance::BalanceTypeTag<T>
pub fn moverox_sui::sui::balance::BalanceTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::balance::BalanceTypeTag<T>
pub type moverox_sui::sui::balance::BalanceTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::balance::BalanceTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::balance::BalanceTypeTag<T>
pub const moverox_sui::sui::balance::BalanceTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::balance::BalanceTypeTag<T>
pub const moverox_sui::sui::balance::BalanceTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::balance::BalanceTypeTag<T>
pub const moverox_sui::sui::balance::BalanceTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::balance::BalanceTypeTag<T>
pub fn moverox_sui::sui::balance::BalanceTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::balance::BalanceTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::balance::BalanceTypeTag<T>
pub fn moverox_sui::sui::balance::BalanceTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::balance::Supply<T>
pub moverox_sui::sui::balance::Supply::value: u64
impl<T: moverox_traits::MoveType> moverox_sui::sui::balance::Supply<T>
pub const fn moverox_sui::sui::balance::Supply<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::balance::SupplyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::balance::Supply<T>
pub const fn moverox_sui::sui::balance::Supply<T>::new(value: u64) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::balance::Supply<T>
pub const moverox_sui::sui::balance::Supply<T>::STRUCT_TAG: moverox_sui::sui::balance::SupplyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::balance::Supply<T>
pub type moverox_sui::sui::balance::Supply<T>::StructTag = moverox_sui::sui::balance::SupplyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::balance::Supply<T>
pub type moverox_sui::sui::balance::Supply<T>::TypeTag = moverox_sui::sui::balance::SupplyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::balance::SupplyTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::balance::SupplyTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::balance::SupplyTypeTag<T>
pub fn moverox_sui::sui::balance::SupplyTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::balance::SupplyTypeTag<T>
pub fn moverox_sui::sui::balance::SupplyTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::balance::SupplyTypeTag<T>
pub type moverox_sui::sui::balance::SupplyTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::balance::SupplyTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::balance::SupplyTypeTag<T>
pub const moverox_sui::sui::balance::SupplyTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::balance::SupplyTypeTag<T>
pub const moverox_sui::sui::balance::SupplyTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::balance::SupplyTypeTag<T>
pub const moverox_sui::sui::balance::SupplyTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::balance::SupplyTypeTag<T>
pub fn moverox_sui::sui::balance::SupplyTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::balance::SupplyTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::balance::SupplyTypeTag<T>
pub fn moverox_sui::sui::balance::SupplyTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::bcs
pub struct moverox_sui::sui::bcs::BCS
pub moverox_sui::sui::bcs::BCS::bytes: alloc::vec::Vec<u8>
impl moverox_sui::sui::bcs::BCS
pub const fn moverox_sui::sui::bcs::BCS::new(bytes: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::sui::bcs::BCS
pub const fn moverox_sui::sui::bcs::BCS::type_tag() -> moverox_sui::sui::bcs::BCSTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::bcs::BCS
pub const moverox_sui::sui::bcs::BCS::STRUCT_TAG: moverox_sui::sui::bcs::BCSTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::bcs::BCS
pub type moverox_sui::sui::bcs::BCS::StructTag = moverox_sui::sui::bcs::BCSTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::bcs::BCS
pub type moverox_sui::sui::bcs::BCS::TypeTag = moverox_sui::sui::bcs::BCSTypeTag
pub struct moverox_sui::sui::bcs::BCSTypeTag
impl core::fmt::Display for moverox_sui::sui::bcs::BCSTypeTag
pub fn moverox_sui::sui::bcs::BCSTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::bcs::BCSTypeTag
pub type moverox_sui::sui::bcs::BCSTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::bcs::BCSTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::bcs::BCSTypeTag
pub const moverox_sui::sui::bcs::BCSTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::bcs::BCSTypeTag
pub const moverox_sui::sui::bcs::BCSTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::bcs::BCSTypeTag
pub const moverox_sui::sui::bcs::BCSTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::bcs::BCSTypeTag
pub fn moverox_sui::sui::bcs::BCSTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::bcs::BCSTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::bcs::BCSTypeTag
pub fn moverox_sui::sui::bcs::BCSTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::bcs::BCSTypeTag
pub fn moverox_sui::sui::bcs::BCSTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::borrow
pub struct moverox_sui::sui::borrow::Borrow
pub moverox_sui::sui::borrow::Borrow::obj: moverox_sui::sui::object::ID
pub moverox_sui::sui::borrow::Borrow::ref: moverox_types::address::Address
impl moverox_sui::sui::borrow::Borrow
pub const fn moverox_sui::sui::borrow::Borrow::new(ref: moverox_types::address::Address, obj: moverox_sui::sui::object::ID) -> Self
impl moverox_sui::sui::borrow::Borrow
pub const fn moverox_sui::sui::borrow::Borrow::type_tag() -> moverox_sui::sui::borrow::BorrowTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::borrow::Borrow
pub const moverox_sui::sui::borrow::Borrow::STRUCT_TAG: moverox_sui::sui::borrow::BorrowTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::borrow::Borrow
pub type moverox_sui::sui::borrow::Borrow::StructTag = moverox_sui::sui::borrow::BorrowTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::borrow::Borrow
pub type moverox_sui::sui::borrow::Borrow::TypeTag = moverox_sui::sui::borrow::BorrowTypeTag
pub struct moverox_sui::sui::borrow::BorrowTypeTag
impl core::fmt::Display for moverox_sui::sui::borrow::BorrowTypeTag
pub fn moverox_sui::sui::borrow::BorrowTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::borrow::BorrowTypeTag
pub type moverox_sui::sui::borrow::BorrowTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::borrow::BorrowTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::borrow::BorrowTypeTag
pub const moverox_sui::sui::borrow::BorrowTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::borrow::BorrowTypeTag
pub const moverox_sui::sui::borrow::BorrowTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::borrow::BorrowTypeTag
pub const moverox_sui::sui::borrow::BorrowTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::borrow::BorrowTypeTag
pub fn moverox_sui::sui::borrow::BorrowTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::borrow::BorrowTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::borrow::BorrowTypeTag
pub fn moverox_sui::sui::borrow::BorrowTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::borrow::BorrowTypeTag
pub fn moverox_sui::sui::borrow::BorrowTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::borrow::Referent<T>
pub moverox_sui::sui::borrow::Referent::id: moverox_types::address::Address
pub moverox_sui::sui::borrow::Referent::value: core::option::Option<T>
impl<T: moverox_traits::MoveType> moverox_sui::sui::borrow::Referent<T>
pub const fn moverox_sui::sui::borrow::Referent<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::borrow::ReferentTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::borrow::Referent<T>
pub const fn moverox_sui::sui::borrow::Referent<T>::new(id: moverox_types::address::Address, value: core::option::Option<T>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::borrow::Referent<T>
pub const moverox_sui::sui::borrow::Referent<T>::STRUCT_TAG: moverox_sui::sui::borrow::ReferentTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::borrow::Referent<T>
pub type moverox_sui::sui::borrow::Referent<T>::StructTag = moverox_sui::sui::borrow::ReferentTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::borrow::Referent<T>
pub type moverox_sui::sui::borrow::Referent<T>::TypeTag = moverox_sui::sui::borrow::ReferentTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::borrow::ReferentTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::borrow::ReferentTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub fn moverox_sui::sui::borrow::ReferentTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub fn moverox_sui::sui::borrow::ReferentTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub type moverox_sui::sui::borrow::ReferentTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::borrow::ReferentTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub const moverox_sui::sui::borrow::ReferentTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub const moverox_sui::sui::borrow::ReferentTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub const moverox_sui::sui::borrow::ReferentTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub fn moverox_sui::sui::borrow::ReferentTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::borrow::ReferentTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::borrow::ReferentTypeTag<T>
pub fn moverox_sui::sui::borrow::ReferentTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::borrow::Test
pub moverox_sui::sui::borrow::Test::id: moverox_sui::sui::object::UID
impl moverox_sui::sui::borrow::Test
pub const fn moverox_sui::sui::borrow::Test::new(id: moverox_sui::sui::object::UID) -> Self
impl moverox_sui::sui::borrow::Test
pub const fn moverox_sui::sui::borrow::Test::type_tag() -> moverox_sui::sui::borrow::TestTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::borrow::Test
pub const moverox_sui::sui::borrow::Test::STRUCT_TAG: moverox_sui::sui::borrow::TestTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::borrow::Test
pub fn moverox_sui::sui::borrow::Test::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::borrow::Test
pub type moverox_sui::sui::borrow::Test::StructTag = moverox_sui::sui::borrow::TestTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::borrow::Test
pub type moverox_sui::sui::borrow::Test::TypeTag = moverox_sui::sui::borrow::TestTypeTag
pub struct moverox_sui::sui::borrow::TestTypeTag
impl core::fmt::Display for moverox_sui::sui::borrow::TestTypeTag
pub fn moverox_sui::sui::borrow::TestTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::borrow::TestTypeTag
pub type moverox_sui::sui::borrow::TestTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::borrow::TestTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::borrow::TestTypeTag
pub const moverox_sui::sui::borrow::TestTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::borrow::TestTypeTag
pub const moverox_sui::sui::borrow::TestTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::borrow::TestTypeTag
pub const moverox_sui::sui::borrow::TestTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::borrow::TestTypeTag
pub fn moverox_sui::sui::borrow::TestTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::borrow::TestTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::borrow::TestTypeTag
pub fn moverox_sui::sui::borrow::TestTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::borrow::TestTypeTag
pub fn moverox_sui::sui::borrow::TestTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::clock
pub struct moverox_sui::sui::clock::Clock
pub moverox_sui::sui::clock::Clock::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::clock::Clock::timestamp_ms: u64
impl moverox_sui::sui::clock::Clock
pub const fn moverox_sui::sui::clock::Clock::new(id: moverox_sui::sui::object::UID, timestamp_ms: u64) -> Self
impl moverox_sui::sui::clock::Clock
pub const fn moverox_sui::sui::clock::Clock::type_tag() -> moverox_sui::sui::clock::ClockTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::clock::Clock
pub const moverox_sui::sui::clock::Clock::STRUCT_TAG: moverox_sui::sui::clock::ClockTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::clock::Clock
pub fn moverox_sui::sui::clock::Clock::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::clock::Clock
pub type moverox_sui::sui::clock::Clock::StructTag = moverox_sui::sui::clock::ClockTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::clock::Clock
pub type moverox_sui::sui::clock::Clock::TypeTag = moverox_sui::sui::clock::ClockTypeTag
pub struct moverox_sui::sui::clock::ClockTypeTag
impl core::fmt::Display for moverox_sui::sui::clock::ClockTypeTag
pub fn moverox_sui::sui::clock::ClockTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::clock::ClockTypeTag
pub type moverox_sui::sui::clock::ClockTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::clock::ClockTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::clock::ClockTypeTag
pub const moverox_sui::sui::clock::ClockTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::clock::ClockTypeTag
pub const moverox_sui::sui::clock::ClockTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::clock::ClockTypeTag
pub const moverox_sui::sui::clock::ClockTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::clock::ClockTypeTag
pub fn moverox_sui::sui::clock::ClockTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::clock::ClockTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::clock::ClockTypeTag
pub fn moverox_sui::sui::clock::ClockTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::clock::ClockTypeTag
pub fn moverox_sui::sui::clock::ClockTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::coin
pub struct moverox_sui::sui::coin::Coin<T>
pub moverox_sui::sui::coin::Coin::balance: moverox_sui::sui::balance::Balance<T>
pub moverox_sui::sui::coin::Coin::id: moverox_sui::sui::object::UID
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::Coin<T>
pub const fn moverox_sui::sui::coin::Coin<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::CoinTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::Coin<T>
pub const fn moverox_sui::sui::coin::Coin<T>::new(id: moverox_sui::sui::object::UID, balance: moverox_sui::sui::balance::Balance<T>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::Coin<T>
pub const moverox_sui::sui::coin::Coin<T>::STRUCT_TAG: moverox_sui::sui::coin::CoinTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::Coin<T>
pub type moverox_sui::sui::coin::Coin<T>::StructTag = moverox_sui::sui::coin::CoinTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::Coin<T>
pub type moverox_sui::sui::coin::Coin<T>::TypeTag = moverox_sui::sui::coin::CoinTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::coin::Coin<T>
pub fn moverox_sui::sui::coin::Coin<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::coin::CoinMetadata<T>
pub moverox_sui::sui::coin::CoinMetadata::decimals: u8
pub moverox_sui::sui::coin::CoinMetadata::description: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::coin::CoinMetadata::icon_url: core::option::Option<moverox_sui::sui::url::Url>
pub moverox_sui::sui::coin::CoinMetadata::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::coin::CoinMetadata::name: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::coin::CoinMetadata::symbol: moverox_sui::move_stdlib::ascii::String
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::CoinMetadata<T>
pub const fn moverox_sui::sui::coin::CoinMetadata<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::CoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::CoinMetadata<T>
pub const fn moverox_sui::sui::coin::CoinMetadata<T>::new(id: moverox_sui::sui::object::UID, decimals: u8, name: moverox_sui::move_stdlib::string::String, symbol: moverox_sui::move_stdlib::ascii::String, description: moverox_sui::move_stdlib::string::String, icon_url: core::option::Option<moverox_sui::sui::url::Url>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::CoinMetadata<T>
pub const moverox_sui::sui::coin::CoinMetadata<T>::STRUCT_TAG: moverox_sui::sui::coin::CoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::CoinMetadata<T>
pub type moverox_sui::sui::coin::CoinMetadata<T>::StructTag = moverox_sui::sui::coin::CoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::CoinMetadata<T>
pub type moverox_sui::sui::coin::CoinMetadata<T>::TypeTag = moverox_sui::sui::coin::CoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::coin::CoinMetadata<T>
pub fn moverox_sui::sui::coin::CoinMetadata<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::coin::CoinMetadataTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::CoinMetadataTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::CoinMetadataTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::CoinMetadataTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub type moverox_sui::sui::coin::CoinMetadataTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::CoinMetadataTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub const moverox_sui::sui::coin::CoinMetadataTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub const moverox_sui::sui::coin::CoinMetadataTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub const moverox_sui::sui::coin::CoinMetadataTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::CoinMetadataTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::CoinMetadataTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::CoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::CoinMetadataTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::coin::CoinTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::CoinTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::CoinTypeTag<T>
pub fn moverox_sui::sui::coin::CoinTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::CoinTypeTag<T>
pub fn moverox_sui::sui::coin::CoinTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::CoinTypeTag<T>
pub type moverox_sui::sui::coin::CoinTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::CoinTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::CoinTypeTag<T>
pub const moverox_sui::sui::coin::CoinTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::CoinTypeTag<T>
pub const moverox_sui::sui::coin::CoinTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::CoinTypeTag<T>
pub const moverox_sui::sui::coin::CoinTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::CoinTypeTag<T>
pub fn moverox_sui::sui::coin::CoinTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::CoinTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::CoinTypeTag<T>
pub fn moverox_sui::sui::coin::CoinTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::coin::CurrencyCreated<T>
pub moverox_sui::sui::coin::CurrencyCreated::decimals: u8
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::CurrencyCreated<T>
pub const fn moverox_sui::sui::coin::CurrencyCreated<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::CurrencyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::CurrencyCreated<T>
pub const fn moverox_sui::sui::coin::CurrencyCreated<T>::new(decimals: u8) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::CurrencyCreated<T>
pub const moverox_sui::sui::coin::CurrencyCreated<T>::STRUCT_TAG: moverox_sui::sui::coin::CurrencyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::CurrencyCreated<T>
pub type moverox_sui::sui::coin::CurrencyCreated<T>::StructTag = moverox_sui::sui::coin::CurrencyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::CurrencyCreated<T>
pub type moverox_sui::sui::coin::CurrencyCreated<T>::TypeTag = moverox_sui::sui::coin::CurrencyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::coin::CurrencyCreatedTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::CurrencyCreatedTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub fn moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub fn moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub type moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub const moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub const moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub const moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub fn moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>
pub fn moverox_sui::sui::coin::CurrencyCreatedTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::coin::DenyCap<T>
pub moverox_sui::sui::coin::DenyCap::id: moverox_sui::sui::object::UID
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::DenyCap<T>
pub const fn moverox_sui::sui::coin::DenyCap<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::DenyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::DenyCap<T>
pub const fn moverox_sui::sui::coin::DenyCap<T>::new(id: moverox_sui::sui::object::UID) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::DenyCap<T>
pub const moverox_sui::sui::coin::DenyCap<T>::STRUCT_TAG: moverox_sui::sui::coin::DenyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::DenyCap<T>
pub type moverox_sui::sui::coin::DenyCap<T>::StructTag = moverox_sui::sui::coin::DenyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::DenyCap<T>
pub type moverox_sui::sui::coin::DenyCap<T>::TypeTag = moverox_sui::sui::coin::DenyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::coin::DenyCap<T>
pub fn moverox_sui::sui::coin::DenyCap<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::coin::DenyCapTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::DenyCapTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub type moverox_sui::sui::coin::DenyCapTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::DenyCapTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub const moverox_sui::sui::coin::DenyCapTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub const moverox_sui::sui::coin::DenyCapTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub const moverox_sui::sui::coin::DenyCapTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::DenyCapTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::DenyCapTypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::coin::DenyCapV2<T>
pub moverox_sui::sui::coin::DenyCapV2::allow_global_pause: bool
pub moverox_sui::sui::coin::DenyCapV2::id: moverox_sui::sui::object::UID
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::DenyCapV2<T>
pub const fn moverox_sui::sui::coin::DenyCapV2<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::DenyCapV2TypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::DenyCapV2<T>
pub const fn moverox_sui::sui::coin::DenyCapV2<T>::new(id: moverox_sui::sui::object::UID, allow_global_pause: bool) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::DenyCapV2<T>
pub const moverox_sui::sui::coin::DenyCapV2<T>::STRUCT_TAG: moverox_sui::sui::coin::DenyCapV2TypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::DenyCapV2<T>
pub type moverox_sui::sui::coin::DenyCapV2<T>::StructTag = moverox_sui::sui::coin::DenyCapV2TypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::DenyCapV2<T>
pub type moverox_sui::sui::coin::DenyCapV2<T>::TypeTag = moverox_sui::sui::coin::DenyCapV2TypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::coin::DenyCapV2<T>
pub fn moverox_sui::sui::coin::DenyCapV2<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::coin::DenyCapV2TypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::DenyCapV2TypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapV2TypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapV2TypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub type moverox_sui::sui::coin::DenyCapV2TypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::DenyCapV2TypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub const moverox_sui::sui::coin::DenyCapV2TypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub const moverox_sui::sui::coin::DenyCapV2TypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub const moverox_sui::sui::coin::DenyCapV2TypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapV2TypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::DenyCapV2TypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::DenyCapV2TypeTag<T>
pub fn moverox_sui::sui::coin::DenyCapV2TypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub moverox_sui::sui::coin::RegulatedCoinMetadata::coin_metadata_object: moverox_sui::sui::object::ID
pub moverox_sui::sui::coin::RegulatedCoinMetadata::deny_cap_object: moverox_sui::sui::object::ID
pub moverox_sui::sui::coin::RegulatedCoinMetadata::id: moverox_sui::sui::object::UID
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub const fn moverox_sui::sui::coin::RegulatedCoinMetadata<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub const fn moverox_sui::sui::coin::RegulatedCoinMetadata<T>::new(id: moverox_sui::sui::object::UID, coin_metadata_object: moverox_sui::sui::object::ID, deny_cap_object: moverox_sui::sui::object::ID) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub const moverox_sui::sui::coin::RegulatedCoinMetadata<T>::STRUCT_TAG: moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub type moverox_sui::sui::coin::RegulatedCoinMetadata<T>::StructTag = moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub type moverox_sui::sui::coin::RegulatedCoinMetadata<T>::TypeTag = moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::coin::RegulatedCoinMetadata<T>
pub fn moverox_sui::sui::coin::RegulatedCoinMetadata<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub type moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub const moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub const moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub const moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>
pub fn moverox_sui::sui::coin::RegulatedCoinMetadataTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::coin::TreasuryCap<T>
pub moverox_sui::sui::coin::TreasuryCap::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::coin::TreasuryCap::total_supply: moverox_sui::sui::balance::Supply<T>
impl<T: moverox_traits::MoveType> moverox_sui::sui::coin::TreasuryCap<T>
pub const fn moverox_sui::sui::coin::TreasuryCap<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::coin::TreasuryCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::coin::TreasuryCap<T>
pub const fn moverox_sui::sui::coin::TreasuryCap<T>::new(id: moverox_sui::sui::object::UID, total_supply: moverox_sui::sui::balance::Supply<T>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::coin::TreasuryCap<T>
pub const moverox_sui::sui::coin::TreasuryCap<T>::STRUCT_TAG: moverox_sui::sui::coin::TreasuryCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::coin::TreasuryCap<T>
pub type moverox_sui::sui::coin::TreasuryCap<T>::StructTag = moverox_sui::sui::coin::TreasuryCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::coin::TreasuryCap<T>
pub type moverox_sui::sui::coin::TreasuryCap<T>::TypeTag = moverox_sui::sui::coin::TreasuryCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::coin::TreasuryCap<T>
pub fn moverox_sui::sui::coin::TreasuryCap<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::coin::TreasuryCapTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::coin::TreasuryCapTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub fn moverox_sui::sui::coin::TreasuryCapTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub fn moverox_sui::sui::coin::TreasuryCapTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub type moverox_sui::sui::coin::TreasuryCapTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::coin::TreasuryCapTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub const moverox_sui::sui::coin::TreasuryCapTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub const moverox_sui::sui::coin::TreasuryCapTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub const moverox_sui::sui::coin::TreasuryCapTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub fn moverox_sui::sui::coin::TreasuryCapTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::coin::TreasuryCapTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::coin::TreasuryCapTypeTag<T>
pub fn moverox_sui::sui::coin::TreasuryCapTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::config
pub struct moverox_sui::sui::config::Config<WriteCap>
pub moverox_sui::sui::config::Config::id: moverox_sui::sui::object::UID
impl<WriteCap: moverox_traits::MoveType> moverox_sui::sui::config::Config<WriteCap>
pub const fn moverox_sui::sui::config::Config<WriteCap>::type_tag(type_write_cap: <WriteCap as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::config::ConfigTypeTag<<WriteCap as moverox_traits::MoveType>::TypeTag>
impl<WriteCap> moverox_sui::sui::config::Config<WriteCap>
pub const fn moverox_sui::sui::config::Config<WriteCap>::new(id: moverox_sui::sui::object::UID) -> Self
impl<WriteCap: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::config::Config<WriteCap>
pub const moverox_sui::sui::config::Config<WriteCap>::STRUCT_TAG: moverox_sui::sui::config::ConfigTypeTag<<WriteCap as moverox_traits::MoveType>::TypeTag>
impl<WriteCap: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::config::Config<WriteCap>
pub type moverox_sui::sui::config::Config<WriteCap>::StructTag = moverox_sui::sui::config::ConfigTypeTag<<WriteCap as moverox_traits::MoveType>::TypeTag>
impl<WriteCap: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::config::Config<WriteCap>
pub type moverox_sui::sui::config::Config<WriteCap>::TypeTag = moverox_sui::sui::config::ConfigTypeTag<<WriteCap as moverox_traits::MoveType>::TypeTag>
impl<WriteCap> moverox_traits::HasKey for moverox_sui::sui::config::Config<WriteCap>
pub fn moverox_sui::sui::config::Config<WriteCap>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::config::ConfigTypeTag<WriteCap: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::config::ConfigTypeTag::type_write_cap: WriteCap
impl<'de, WriteCap: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub fn moverox_sui::sui::config::ConfigTypeTag<WriteCap>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<WriteCap: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub fn moverox_sui::sui::config::ConfigTypeTag<WriteCap>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<WriteCap: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub type moverox_sui::sui::config::ConfigTypeTag<WriteCap>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::config::ConfigTypeTag<WriteCap>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<WriteCap: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub const moverox_sui::sui::config::ConfigTypeTag<WriteCap>::ADDRESS: moverox_types::address::Address
impl<WriteCap: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub const moverox_sui::sui::config::ConfigTypeTag<WriteCap>::MODULE: &moverox_types::ident_str::IdentStr
impl<WriteCap: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub const moverox_sui::sui::config::ConfigTypeTag<WriteCap>::NAME: &moverox_types::ident_str::IdentStr
impl<WriteCap: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub fn moverox_sui::sui::config::ConfigTypeTag<WriteCap>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::config::ConfigTypeTag<WriteCap>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<WriteCap: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::config::ConfigTypeTag<WriteCap>
pub fn moverox_sui::sui::config::ConfigTypeTag<WriteCap>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::config::Setting<Value>
pub moverox_sui::sui::config::Setting::data: core::option::Option<moverox_sui::sui::config::SettingData<Value>>
impl<Value: moverox_traits::MoveType> moverox_sui::sui::config::Setting<Value>
pub const fn moverox_sui::sui::config::Setting<Value>::type_tag(type_value: <Value as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::config::SettingTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
impl<Value> moverox_sui::sui::config::Setting<Value>
pub const fn moverox_sui::sui::config::Setting<Value>::new(data: core::option::Option<moverox_sui::sui::config::SettingData<Value>>) -> Self
impl<Value: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::config::Setting<Value>
pub const moverox_sui::sui::config::Setting<Value>::STRUCT_TAG: moverox_sui::sui::config::SettingTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
impl<Value: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::config::Setting<Value>
pub type moverox_sui::sui::config::Setting<Value>::StructTag = moverox_sui::sui::config::SettingTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
impl<Value: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::config::Setting<Value>
pub type moverox_sui::sui::config::Setting<Value>::TypeTag = moverox_sui::sui::config::SettingTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::config::SettingData<Value>
pub moverox_sui::sui::config::SettingData::newer_value: core::option::Option<Value>
pub moverox_sui::sui::config::SettingData::newer_value_epoch: u64
pub moverox_sui::sui::config::SettingData::older_value_opt: core::option::Option<Value>
impl<Value: moverox_traits::MoveType> moverox_sui::sui::config::SettingData<Value>
pub const fn moverox_sui::sui::config::SettingData<Value>::type_tag(type_value: <Value as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::config::SettingDataTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
impl<Value> moverox_sui::sui::config::SettingData<Value>
pub const fn moverox_sui::sui::config::SettingData<Value>::new(newer_value_epoch: u64, newer_value: core::option::Option<Value>, older_value_opt: core::option::Option<Value>) -> Self
impl<Value: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::config::SettingData<Value>
pub const moverox_sui::sui::config::SettingData<Value>::STRUCT_TAG: moverox_sui::sui::config::SettingDataTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
impl<Value: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::config::SettingData<Value>
pub type moverox_sui::sui::config::SettingData<Value>::StructTag = moverox_sui::sui::config::SettingDataTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
impl<Value: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::config::SettingData<Value>
pub type moverox_sui::sui::config::SettingData<Value>::TypeTag = moverox_sui::sui::config::SettingDataTypeTag<<Value as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::config::SettingDataTypeTag<Value: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::config::SettingDataTypeTag::type_value: Value
impl<'de, Value: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub fn moverox_sui::sui::config::SettingDataTypeTag<Value>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<Value: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub fn moverox_sui::sui::config::SettingDataTypeTag<Value>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<Value: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub type moverox_sui::sui::config::SettingDataTypeTag<Value>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::config::SettingDataTypeTag<Value>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub const moverox_sui::sui::config::SettingDataTypeTag<Value>::ADDRESS: moverox_types::address::Address
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub const moverox_sui::sui::config::SettingDataTypeTag<Value>::MODULE: &moverox_types::ident_str::IdentStr
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub const moverox_sui::sui::config::SettingDataTypeTag<Value>::NAME: &moverox_types::ident_str::IdentStr
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub fn moverox_sui::sui::config::SettingDataTypeTag<Value>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::config::SettingDataTypeTag<Value>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<Value: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::config::SettingDataTypeTag<Value>
pub fn moverox_sui::sui::config::SettingDataTypeTag<Value>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::config::SettingTypeTag<Value: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::config::SettingTypeTag::type_value: Value
impl<'de, Value: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::config::SettingTypeTag<Value>
pub fn moverox_sui::sui::config::SettingTypeTag<Value>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<Value: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::config::SettingTypeTag<Value>
pub fn moverox_sui::sui::config::SettingTypeTag<Value>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<Value: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::config::SettingTypeTag<Value>
pub type moverox_sui::sui::config::SettingTypeTag<Value>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::config::SettingTypeTag<Value>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::config::SettingTypeTag<Value>
pub const moverox_sui::sui::config::SettingTypeTag<Value>::ADDRESS: moverox_types::address::Address
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::config::SettingTypeTag<Value>
pub const moverox_sui::sui::config::SettingTypeTag<Value>::MODULE: &moverox_types::ident_str::IdentStr
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::config::SettingTypeTag<Value>
pub const moverox_sui::sui::config::SettingTypeTag<Value>::NAME: &moverox_types::ident_str::IdentStr
impl<Value: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::config::SettingTypeTag<Value>
pub fn moverox_sui::sui::config::SettingTypeTag<Value>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::config::SettingTypeTag<Value>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<Value: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::config::SettingTypeTag<Value>
pub fn moverox_sui::sui::config::SettingTypeTag<Value>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::deny_list
pub struct moverox_sui::sui::deny_list::AddressKey(pub moverox_types::address::Address)
impl moverox_sui::sui::deny_list::AddressKey
pub const fn moverox_sui::sui::deny_list::AddressKey::new(_0: moverox_types::address::Address) -> Self
impl moverox_sui::sui::deny_list::AddressKey
pub const fn moverox_sui::sui::deny_list::AddressKey::type_tag() -> moverox_sui::sui::deny_list::AddressKeyTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::AddressKey
pub const moverox_sui::sui::deny_list::AddressKey::STRUCT_TAG: moverox_sui::sui::deny_list::AddressKeyTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::AddressKey
pub type moverox_sui::sui::deny_list::AddressKey::StructTag = moverox_sui::sui::deny_list::AddressKeyTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::AddressKey
pub type moverox_sui::sui::deny_list::AddressKey::TypeTag = moverox_sui::sui::deny_list::AddressKeyTypeTag
pub struct moverox_sui::sui::deny_list::AddressKeyTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub fn moverox_sui::sui::deny_list::AddressKeyTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub type moverox_sui::sui::deny_list::AddressKeyTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::AddressKeyTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub const moverox_sui::sui::deny_list::AddressKeyTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub const moverox_sui::sui::deny_list::AddressKeyTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub const moverox_sui::sui::deny_list::AddressKeyTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub fn moverox_sui::sui::deny_list::AddressKeyTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::AddressKeyTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub fn moverox_sui::sui::deny_list::AddressKeyTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::AddressKeyTypeTag
pub fn moverox_sui::sui::deny_list::AddressKeyTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::deny_list::ConfigKey
pub moverox_sui::sui::deny_list::ConfigKey::per_type_index: u64
pub moverox_sui::sui::deny_list::ConfigKey::per_type_key: alloc::vec::Vec<u8>
impl moverox_sui::sui::deny_list::ConfigKey
pub const fn moverox_sui::sui::deny_list::ConfigKey::new(per_type_index: u64, per_type_key: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::sui::deny_list::ConfigKey
pub const fn moverox_sui::sui::deny_list::ConfigKey::type_tag() -> moverox_sui::sui::deny_list::ConfigKeyTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::ConfigKey
pub const moverox_sui::sui::deny_list::ConfigKey::STRUCT_TAG: moverox_sui::sui::deny_list::ConfigKeyTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::ConfigKey
pub type moverox_sui::sui::deny_list::ConfigKey::StructTag = moverox_sui::sui::deny_list::ConfigKeyTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::ConfigKey
pub type moverox_sui::sui::deny_list::ConfigKey::TypeTag = moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub struct moverox_sui::sui::deny_list::ConfigKeyTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub fn moverox_sui::sui::deny_list::ConfigKeyTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub type moverox_sui::sui::deny_list::ConfigKeyTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::ConfigKeyTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub const moverox_sui::sui::deny_list::ConfigKeyTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub const moverox_sui::sui::deny_list::ConfigKeyTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub const moverox_sui::sui::deny_list::ConfigKeyTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub fn moverox_sui::sui::deny_list::ConfigKeyTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::ConfigKeyTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub fn moverox_sui::sui::deny_list::ConfigKeyTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::ConfigKeyTypeTag
pub fn moverox_sui::sui::deny_list::ConfigKeyTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::deny_list::ConfigWriteCap(_)
impl moverox_sui::sui::deny_list::ConfigWriteCap
pub const fn moverox_sui::sui::deny_list::ConfigWriteCap::new() -> Self
impl moverox_sui::sui::deny_list::ConfigWriteCap
pub const fn moverox_sui::sui::deny_list::ConfigWriteCap::type_tag() -> moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::ConfigWriteCap
pub const moverox_sui::sui::deny_list::ConfigWriteCap::STRUCT_TAG: moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::ConfigWriteCap
pub type moverox_sui::sui::deny_list::ConfigWriteCap::StructTag = moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::ConfigWriteCap
pub type moverox_sui::sui::deny_list::ConfigWriteCap::TypeTag = moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub struct moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub fn moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub type moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub const moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub const moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub const moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub fn moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub fn moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::ConfigWriteCapTypeTag
pub fn moverox_sui::sui::deny_list::ConfigWriteCapTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::deny_list::DenyList
pub moverox_sui::sui::deny_list::DenyList::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::deny_list::DenyList::lists: moverox_sui::sui::bag::Bag
impl moverox_sui::sui::deny_list::DenyList
pub const fn moverox_sui::sui::deny_list::DenyList::new(id: moverox_sui::sui::object::UID, lists: moverox_sui::sui::bag::Bag) -> Self
impl moverox_sui::sui::deny_list::DenyList
pub const fn moverox_sui::sui::deny_list::DenyList::type_tag() -> moverox_sui::sui::deny_list::DenyListTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::DenyList
pub const moverox_sui::sui::deny_list::DenyList::STRUCT_TAG: moverox_sui::sui::deny_list::DenyListTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::deny_list::DenyList
pub fn moverox_sui::sui::deny_list::DenyList::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::DenyList
pub type moverox_sui::sui::deny_list::DenyList::StructTag = moverox_sui::sui::deny_list::DenyListTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::DenyList
pub type moverox_sui::sui::deny_list::DenyList::TypeTag = moverox_sui::sui::deny_list::DenyListTypeTag
pub struct moverox_sui::sui::deny_list::DenyListTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::DenyListTypeTag
pub fn moverox_sui::sui::deny_list::DenyListTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::DenyListTypeTag
pub type moverox_sui::sui::deny_list::DenyListTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::DenyListTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::DenyListTypeTag
pub const moverox_sui::sui::deny_list::DenyListTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::DenyListTypeTag
pub const moverox_sui::sui::deny_list::DenyListTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::DenyListTypeTag
pub const moverox_sui::sui::deny_list::DenyListTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::DenyListTypeTag
pub fn moverox_sui::sui::deny_list::DenyListTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::DenyListTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::DenyListTypeTag
pub fn moverox_sui::sui::deny_list::DenyListTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::DenyListTypeTag
pub fn moverox_sui::sui::deny_list::DenyListTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::deny_list::GlobalPauseKey(_)
impl moverox_sui::sui::deny_list::GlobalPauseKey
pub const fn moverox_sui::sui::deny_list::GlobalPauseKey::new() -> Self
impl moverox_sui::sui::deny_list::GlobalPauseKey
pub const fn moverox_sui::sui::deny_list::GlobalPauseKey::type_tag() -> moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::GlobalPauseKey
pub const moverox_sui::sui::deny_list::GlobalPauseKey::STRUCT_TAG: moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::GlobalPauseKey
pub type moverox_sui::sui::deny_list::GlobalPauseKey::StructTag = moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::GlobalPauseKey
pub type moverox_sui::sui::deny_list::GlobalPauseKey::TypeTag = moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub struct moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub fn moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub type moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub const moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub const moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub const moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub fn moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub fn moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag
pub fn moverox_sui::sui::deny_list::GlobalPauseKeyTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::deny_list::PerTypeConfigCreated
pub moverox_sui::sui::deny_list::PerTypeConfigCreated::config_id: moverox_sui::sui::object::ID
pub moverox_sui::sui::deny_list::PerTypeConfigCreated::key: moverox_sui::sui::deny_list::ConfigKey
impl moverox_sui::sui::deny_list::PerTypeConfigCreated
pub const fn moverox_sui::sui::deny_list::PerTypeConfigCreated::new(key: moverox_sui::sui::deny_list::ConfigKey, config_id: moverox_sui::sui::object::ID) -> Self
impl moverox_sui::sui::deny_list::PerTypeConfigCreated
pub const fn moverox_sui::sui::deny_list::PerTypeConfigCreated::type_tag() -> moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::PerTypeConfigCreated
pub const moverox_sui::sui::deny_list::PerTypeConfigCreated::STRUCT_TAG: moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::PerTypeConfigCreated
pub type moverox_sui::sui::deny_list::PerTypeConfigCreated::StructTag = moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::PerTypeConfigCreated
pub type moverox_sui::sui::deny_list::PerTypeConfigCreated::TypeTag = moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub struct moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub type moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub const moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub const moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub const moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeConfigCreatedTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::deny_list::PerTypeList
pub moverox_sui::sui::deny_list::PerTypeList::denied_addresses: moverox_sui::sui::table::Table<alloc::vec::Vec<u8>, moverox_sui::sui::vec_set::VecSet<moverox_types::address::Address>>
pub moverox_sui::sui::deny_list::PerTypeList::denied_count: moverox_sui::sui::table::Table<moverox_types::address::Address, u64>
pub moverox_sui::sui::deny_list::PerTypeList::id: moverox_sui::sui::object::UID
impl moverox_sui::sui::deny_list::PerTypeList
pub const fn moverox_sui::sui::deny_list::PerTypeList::new(id: moverox_sui::sui::object::UID, denied_count: moverox_sui::sui::table::Table<moverox_types::address::Address, u64>, denied_addresses: moverox_sui::sui::table::Table<alloc::vec::Vec<u8>, moverox_sui::sui::vec_set::VecSet<moverox_types::address::Address>>) -> Self
impl moverox_sui::sui::deny_list::PerTypeList
pub const fn moverox_sui::sui::deny_list::PerTypeList::type_tag() -> moverox_sui::sui::deny_list::PerTypeListTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::deny_list::PerTypeList
pub const moverox_sui::sui::deny_list::PerTypeList::STRUCT_TAG: moverox_sui::sui::deny_list::PerTypeListTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::deny_list::PerTypeList
pub fn moverox_sui::sui::deny_list::PerTypeList::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::deny_list::PerTypeList
pub type moverox_sui::sui::deny_list::PerTypeList::StructTag = moverox_sui::sui::deny_list::PerTypeListTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::deny_list::PerTypeList
pub type moverox_sui::sui::deny_list::PerTypeList::TypeTag = moverox_sui::sui::deny_list::PerTypeListTypeTag
pub struct moverox_sui::sui::deny_list::PerTypeListTypeTag
impl core::fmt::Display for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeListTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub type moverox_sui::sui::deny_list::PerTypeListTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::deny_list::PerTypeListTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub const moverox_sui::sui::deny_list::PerTypeListTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub const moverox_sui::sui::deny_list::PerTypeListTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub const moverox_sui::sui::deny_list::PerTypeListTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeListTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::deny_list::PerTypeListTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeListTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::deny_list::PerTypeListTypeTag
pub fn moverox_sui::sui::deny_list::PerTypeListTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::display
pub struct moverox_sui::sui::display::Display<T>
pub moverox_sui::sui::display::Display::fields: moverox_sui::sui::vec_map::VecMap<moverox_sui::move_stdlib::string::String, moverox_sui::move_stdlib::string::String>
pub moverox_sui::sui::display::Display::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::display::Display::version: u16
impl<T: moverox_traits::MoveType> moverox_sui::sui::display::Display<T>
pub const fn moverox_sui::sui::display::Display<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::display::DisplayTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::display::Display<T>
pub const fn moverox_sui::sui::display::Display<T>::new(id: moverox_sui::sui::object::UID, fields: moverox_sui::sui::vec_map::VecMap<moverox_sui::move_stdlib::string::String, moverox_sui::move_stdlib::string::String>, version: u16) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::display::Display<T>
pub const moverox_sui::sui::display::Display<T>::STRUCT_TAG: moverox_sui::sui::display::DisplayTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::display::Display<T>
pub type moverox_sui::sui::display::Display<T>::StructTag = moverox_sui::sui::display::DisplayTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::display::Display<T>
pub type moverox_sui::sui::display::Display<T>::TypeTag = moverox_sui::sui::display::DisplayTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::display::Display<T>
pub fn moverox_sui::sui::display::Display<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::display::DisplayCreated<T>
pub moverox_sui::sui::display::DisplayCreated::id: moverox_sui::sui::object::ID
impl<T: moverox_traits::MoveType> moverox_sui::sui::display::DisplayCreated<T>
pub const fn moverox_sui::sui::display::DisplayCreated<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::display::DisplayCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::display::DisplayCreated<T>
pub const fn moverox_sui::sui::display::DisplayCreated<T>::new(id: moverox_sui::sui::object::ID) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::display::DisplayCreated<T>
pub const moverox_sui::sui::display::DisplayCreated<T>::STRUCT_TAG: moverox_sui::sui::display::DisplayCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::display::DisplayCreated<T>
pub type moverox_sui::sui::display::DisplayCreated<T>::StructTag = moverox_sui::sui::display::DisplayCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::display::DisplayCreated<T>
pub type moverox_sui::sui::display::DisplayCreated<T>::TypeTag = moverox_sui::sui::display::DisplayCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::display::DisplayCreatedTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::display::DisplayCreatedTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub fn moverox_sui::sui::display::DisplayCreatedTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub fn moverox_sui::sui::display::DisplayCreatedTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub type moverox_sui::sui::display::DisplayCreatedTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::display::DisplayCreatedTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub const moverox_sui::sui::display::DisplayCreatedTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub const moverox_sui::sui::display::DisplayCreatedTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub const moverox_sui::sui::display::DisplayCreatedTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub fn moverox_sui::sui::display::DisplayCreatedTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::display::DisplayCreatedTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::display::DisplayCreatedTypeTag<T>
pub fn moverox_sui::sui::display::DisplayCreatedTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::display::DisplayTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::display::DisplayTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::display::DisplayTypeTag<T>
pub fn moverox_sui::sui::display::DisplayTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::display::DisplayTypeTag<T>
pub fn moverox_sui::sui::display::DisplayTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::display::DisplayTypeTag<T>
pub type moverox_sui::sui::display::DisplayTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::display::DisplayTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::display::DisplayTypeTag<T>
pub const moverox_sui::sui::display::DisplayTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::display::DisplayTypeTag<T>
pub const moverox_sui::sui::display::DisplayTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::display::DisplayTypeTag<T>
pub const moverox_sui::sui::display::DisplayTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::display::DisplayTypeTag<T>
pub fn moverox_sui::sui::display::DisplayTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::display::DisplayTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::display::DisplayTypeTag<T>
pub fn moverox_sui::sui::display::DisplayTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::display::VersionUpdated<T>
pub moverox_sui::sui::display::VersionUpdated::fields: moverox_sui::sui::vec_map::VecMap<moverox_sui::move_stdlib::string::String, moverox_sui::move_stdlib::string::String>
pub moverox_sui::sui::display::VersionUpdated::id: moverox_sui::sui::object::ID
pub moverox_sui::sui::display::VersionUpdated::version: u16
impl<T: moverox_traits::MoveType> moverox_sui::sui::display::VersionUpdated<T>
pub const fn moverox_sui::sui::display::VersionUpdated<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::display::VersionUpdatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::display::VersionUpdated<T>
pub const fn moverox_sui::sui::display::VersionUpdated<T>::new(id: moverox_sui::sui::object::ID, version: u16, fields: moverox_sui::sui::vec_map::VecMap<moverox_sui::move_stdlib::string::String, moverox_sui::move_stdlib::string::String>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::display::VersionUpdated<T>
pub const moverox_sui::sui::display::VersionUpdated<T>::STRUCT_TAG: moverox_sui::sui::display::VersionUpdatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::display::VersionUpdated<T>
pub type moverox_sui::sui::display::VersionUpdated<T>::StructTag = moverox_sui::sui::display::VersionUpdatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::display::VersionUpdated<T>
pub type moverox_sui::sui::display::VersionUpdated<T>::TypeTag = moverox_sui::sui::display::VersionUpdatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::display::VersionUpdatedTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::display::VersionUpdatedTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub fn moverox_sui::sui::display::VersionUpdatedTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub fn moverox_sui::sui::display::VersionUpdatedTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub type moverox_sui::sui::display::VersionUpdatedTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::display::VersionUpdatedTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub const moverox_sui::sui::display::VersionUpdatedTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub const moverox_sui::sui::display::VersionUpdatedTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub const moverox_sui::sui::display::VersionUpdatedTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub fn moverox_sui::sui::display::VersionUpdatedTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::display::VersionUpdatedTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::display::VersionUpdatedTypeTag<T>
pub fn moverox_sui::sui::display::VersionUpdatedTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::dynamic_field
pub struct moverox_sui::sui::dynamic_field::Field<Name, Value>
pub moverox_sui::sui::dynamic_field::Field::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::dynamic_field::Field::name: Name
pub moverox_sui::sui::dynamic_field::Field::value: Value
impl<Name, Value> moverox_sui::sui::dynamic_field::Field<Name, Value>
pub const fn moverox_sui::sui::dynamic_field::Field<Name, Value>::new(id: moverox_sui::sui::object::UID, name: Name, value: Value) -> Self
impl<Name: moverox_traits::MoveType, Value: moverox_traits::MoveType> moverox_sui::sui::dynamic_field::Field<Name, Value>
pub const fn moverox_sui::sui::dynamic_field::Field<Name, Value>::type_tag(type_name: <Name as moverox_traits::MoveType>::TypeTag, type_value: <Value as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::dynamic_field::FieldTypeTag<<Name as moverox_traits::MoveType>::TypeTag, <Value as moverox_traits::MoveType>::TypeTag>
impl<Name, Value> moverox_traits::HasKey for moverox_sui::sui::dynamic_field::Field<Name, Value>
pub fn moverox_sui::sui::dynamic_field::Field<Name, Value>::address(&self) -> moverox_types::address::Address
impl<Name: moverox_traits::ConstTypeTag, Value: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::dynamic_field::Field<Name, Value>
pub const moverox_sui::sui::dynamic_field::Field<Name, Value>::STRUCT_TAG: moverox_sui::sui::dynamic_field::FieldTypeTag<<Name as moverox_traits::MoveType>::TypeTag, <Value as moverox_traits::MoveType>::TypeTag>
impl<Name: moverox_traits::MoveType, Value: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::dynamic_field::Field<Name, Value>
pub type moverox_sui::sui::dynamic_field::Field<Name, Value>::StructTag = moverox_sui::sui::dynamic_field::FieldTypeTag<<Name as moverox_traits::MoveType>::TypeTag, <Value as moverox_traits::MoveType>::TypeTag>
impl<Name: moverox_traits::MoveType, Value: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::dynamic_field::Field<Name, Value>
pub type moverox_sui::sui::dynamic_field::Field<Name, Value>::TypeTag = moverox_sui::sui::dynamic_field::FieldTypeTag<<Name as moverox_traits::MoveType>::TypeTag, <Value as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::dynamic_field::FieldTypeTag<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::dynamic_field::FieldTypeTag::type_name: Name
pub moverox_sui::sui::dynamic_field::FieldTypeTag::type_value: Value
impl<'de, Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub fn moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub fn moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub type moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub const moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::ADDRESS: moverox_types::address::Address
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub const moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::MODULE: &moverox_types::ident_str::IdentStr
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub const moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::NAME: &moverox_types::ident_str::IdentStr
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub fn moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<Name: moverox_traits::MoveTypeTag, Value: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>
pub fn moverox_sui::sui::dynamic_field::FieldTypeTag<Name, Value>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::dynamic_object_field
pub struct moverox_sui::sui::dynamic_object_field::Wrapper<Name>
pub moverox_sui::sui::dynamic_object_field::Wrapper::name: Name
impl<Name: moverox_traits::MoveType> moverox_sui::sui::dynamic_object_field::Wrapper<Name>
pub const fn moverox_sui::sui::dynamic_object_field::Wrapper<Name>::type_tag(type_name: <Name as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::dynamic_object_field::WrapperTypeTag<<Name as moverox_traits::MoveType>::TypeTag>
impl<Name> moverox_sui::sui::dynamic_object_field::Wrapper<Name>
pub const fn moverox_sui::sui::dynamic_object_field::Wrapper<Name>::new(name: Name) -> Self
impl<Name: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::dynamic_object_field::Wrapper<Name>
pub const moverox_sui::sui::dynamic_object_field::Wrapper<Name>::STRUCT_TAG: moverox_sui::sui::dynamic_object_field::WrapperTypeTag<<Name as moverox_traits::MoveType>::TypeTag>
impl<Name: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::dynamic_object_field::Wrapper<Name>
pub type moverox_sui::sui::dynamic_object_field::Wrapper<Name>::StructTag = moverox_sui::sui::dynamic_object_field::WrapperTypeTag<<Name as moverox_traits::MoveType>::TypeTag>
impl<Name: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::dynamic_object_field::Wrapper<Name>
pub type moverox_sui::sui::dynamic_object_field::Wrapper<Name>::TypeTag = moverox_sui::sui::dynamic_object_field::WrapperTypeTag<<Name as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::dynamic_object_field::WrapperTypeTag::type_name: Name
impl<'de, Name: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub fn moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<Name: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub fn moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<Name: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub type moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<Name: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub const moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::ADDRESS: moverox_types::address::Address
impl<Name: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub const moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::MODULE: &moverox_types::ident_str::IdentStr
impl<Name: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub const moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::NAME: &moverox_types::ident_str::IdentStr
impl<Name: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub fn moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<Name: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>
pub fn moverox_sui::sui::dynamic_object_field::WrapperTypeTag<Name>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::linked_table
pub struct moverox_sui::sui::linked_table::LinkedTable<K, V>
pub moverox_sui::sui::linked_table::LinkedTable::head: core::option::Option<K>
pub moverox_sui::sui::linked_table::LinkedTable::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::linked_table::LinkedTable::size: u64
pub moverox_sui::sui::linked_table::LinkedTable::tail: core::option::Option<K>
impl<K, V> moverox_sui::sui::linked_table::LinkedTable<K, V>
pub const fn moverox_sui::sui::linked_table::LinkedTable<K, V>::new(id: moverox_sui::sui::object::UID, size: u64, head: core::option::Option<K>, tail: core::option::Option<K>) -> Self
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_sui::sui::linked_table::LinkedTable<K, V>
pub const fn moverox_sui::sui::linked_table::LinkedTable<K, V>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag, type_v: <V as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::linked_table::LinkedTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K, V> moverox_traits::HasKey for moverox_sui::sui::linked_table::LinkedTable<K, V>
pub fn moverox_sui::sui::linked_table::LinkedTable<K, V>::address(&self) -> moverox_types::address::Address
impl<K: moverox_traits::ConstTypeTag, V: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::linked_table::LinkedTable<K, V>
pub const moverox_sui::sui::linked_table::LinkedTable<K, V>::STRUCT_TAG: moverox_sui::sui::linked_table::LinkedTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::linked_table::LinkedTable<K, V>
pub type moverox_sui::sui::linked_table::LinkedTable<K, V>::StructTag = moverox_sui::sui::linked_table::LinkedTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::linked_table::LinkedTable<K, V>
pub type moverox_sui::sui::linked_table::LinkedTable<K, V>::TypeTag = moverox_sui::sui::linked_table::LinkedTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::linked_table::LinkedTableTypeTag<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::linked_table::LinkedTableTypeTag::type_k: K
pub moverox_sui::sui::linked_table::LinkedTableTypeTag::type_v: V
impl<'de, K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub type moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub const moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub const moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub const moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::LinkedTableTypeTag<K, V>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::linked_table::Node<K, V>
pub moverox_sui::sui::linked_table::Node::next: core::option::Option<K>
pub moverox_sui::sui::linked_table::Node::prev: core::option::Option<K>
pub moverox_sui::sui::linked_table::Node::value: V
impl<K, V> moverox_sui::sui::linked_table::Node<K, V>
pub const fn moverox_sui::sui::linked_table::Node<K, V>::new(prev: core::option::Option<K>, next: core::option::Option<K>, value: V) -> Self
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_sui::sui::linked_table::Node<K, V>
pub const fn moverox_sui::sui::linked_table::Node<K, V>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag, type_v: <V as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::linked_table::NodeTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::ConstTypeTag, V: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::linked_table::Node<K, V>
pub const moverox_sui::sui::linked_table::Node<K, V>::STRUCT_TAG: moverox_sui::sui::linked_table::NodeTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::linked_table::Node<K, V>
pub type moverox_sui::sui::linked_table::Node<K, V>::StructTag = moverox_sui::sui::linked_table::NodeTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::linked_table::Node<K, V>
pub type moverox_sui::sui::linked_table::Node<K, V>::TypeTag = moverox_sui::sui::linked_table::NodeTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::linked_table::NodeTypeTag<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::linked_table::NodeTypeTag::type_k: K
pub moverox_sui::sui::linked_table::NodeTypeTag::type_v: V
impl<'de, K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::NodeTypeTag<K, V>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::NodeTypeTag<K, V>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub type moverox_sui::sui::linked_table::NodeTypeTag<K, V>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::linked_table::NodeTypeTag<K, V>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub const moverox_sui::sui::linked_table::NodeTypeTag<K, V>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub const moverox_sui::sui::linked_table::NodeTypeTag<K, V>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub const moverox_sui::sui::linked_table::NodeTypeTag<K, V>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::NodeTypeTag<K, V>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::linked_table::NodeTypeTag<K, V>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::linked_table::NodeTypeTag<K, V>
pub fn moverox_sui::sui::linked_table::NodeTypeTag<K, V>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::object
pub struct moverox_sui::sui::object::ID
pub moverox_sui::sui::object::ID::bytes: moverox_types::address::Address
impl moverox_sui::sui::object::ID
pub const fn moverox_sui::sui::object::ID::new(bytes: moverox_types::address::Address) -> Self
impl moverox_sui::sui::object::ID
pub const fn moverox_sui::sui::object::ID::type_tag() -> moverox_sui::sui::object::IDTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::object::ID
pub const moverox_sui::sui::object::ID::STRUCT_TAG: moverox_sui::sui::object::IDTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::object::ID
pub type moverox_sui::sui::object::ID::StructTag = moverox_sui::sui::object::IDTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::object::ID
pub type moverox_sui::sui::object::ID::TypeTag = moverox_sui::sui::object::IDTypeTag
pub struct moverox_sui::sui::object::IDTypeTag
impl core::fmt::Display for moverox_sui::sui::object::IDTypeTag
pub fn moverox_sui::sui::object::IDTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::object::IDTypeTag
pub type moverox_sui::sui::object::IDTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::object::IDTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::object::IDTypeTag
pub const moverox_sui::sui::object::IDTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::object::IDTypeTag
pub const moverox_sui::sui::object::IDTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::object::IDTypeTag
pub const moverox_sui::sui::object::IDTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::object::IDTypeTag
pub fn moverox_sui::sui::object::IDTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::object::IDTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::object::IDTypeTag
pub fn moverox_sui::sui::object::IDTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::object::IDTypeTag
pub fn moverox_sui::sui::object::IDTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::object::UID
pub moverox_sui::sui::object::UID::id: moverox_sui::sui::object::ID
impl moverox_sui::sui::object::UID
pub const fn moverox_sui::sui::object::UID::new(id: moverox_sui::sui::object::ID) -> Self
impl moverox_sui::sui::object::UID
pub const fn moverox_sui::sui::object::UID::type_tag() -> moverox_sui::sui::object::UIDTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::object::UID
pub const moverox_sui::sui::object::UID::STRUCT_TAG: moverox_sui::sui::object::UIDTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::object::UID
pub type moverox_sui::sui::object::UID::StructTag = moverox_sui::sui::object::UIDTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::object::UID
pub type moverox_sui::sui::object::UID::TypeTag = moverox_sui::sui::object::UIDTypeTag
pub struct moverox_sui::sui::object::UIDTypeTag
impl core::fmt::Display for moverox_sui::sui::object::UIDTypeTag
pub fn moverox_sui::sui::object::UIDTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::object::UIDTypeTag
pub type moverox_sui::sui::object::UIDTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::object::UIDTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::object::UIDTypeTag
pub const moverox_sui::sui::object::UIDTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::object::UIDTypeTag
pub const moverox_sui::sui::object::UIDTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::object::UIDTypeTag
pub const moverox_sui::sui::object::UIDTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::object::UIDTypeTag
pub fn moverox_sui::sui::object::UIDTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::object::UIDTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::object::UIDTypeTag
pub fn moverox_sui::sui::object::UIDTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::object::UIDTypeTag
pub fn moverox_sui::sui::object::UIDTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::object_bag
pub struct moverox_sui::sui::object_bag::ObjectBag
pub moverox_sui::sui::object_bag::ObjectBag::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::object_bag::ObjectBag::size: u64
impl moverox_sui::sui::object_bag::ObjectBag
pub const fn moverox_sui::sui::object_bag::ObjectBag::new(id: moverox_sui::sui::object::UID, size: u64) -> Self
impl moverox_sui::sui::object_bag::ObjectBag
pub const fn moverox_sui::sui::object_bag::ObjectBag::type_tag() -> moverox_sui::sui::object_bag::ObjectBagTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::object_bag::ObjectBag
pub const moverox_sui::sui::object_bag::ObjectBag::STRUCT_TAG: moverox_sui::sui::object_bag::ObjectBagTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::object_bag::ObjectBag
pub fn moverox_sui::sui::object_bag::ObjectBag::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::object_bag::ObjectBag
pub type moverox_sui::sui::object_bag::ObjectBag::StructTag = moverox_sui::sui::object_bag::ObjectBagTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::object_bag::ObjectBag
pub type moverox_sui::sui::object_bag::ObjectBag::TypeTag = moverox_sui::sui::object_bag::ObjectBagTypeTag
pub struct moverox_sui::sui::object_bag::ObjectBagTypeTag
impl core::fmt::Display for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub fn moverox_sui::sui::object_bag::ObjectBagTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub type moverox_sui::sui::object_bag::ObjectBagTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::object_bag::ObjectBagTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub const moverox_sui::sui::object_bag::ObjectBagTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub const moverox_sui::sui::object_bag::ObjectBagTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub const moverox_sui::sui::object_bag::ObjectBagTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub fn moverox_sui::sui::object_bag::ObjectBagTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::object_bag::ObjectBagTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub fn moverox_sui::sui::object_bag::ObjectBagTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::object_bag::ObjectBagTypeTag
pub fn moverox_sui::sui::object_bag::ObjectBagTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::object_table
pub struct moverox_sui::sui::object_table::ObjectTable<K, V>
pub moverox_sui::sui::object_table::ObjectTable::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::object_table::ObjectTable::size: u64
impl<K, V> moverox_sui::sui::object_table::ObjectTable<K, V>
pub const fn moverox_sui::sui::object_table::ObjectTable<K, V>::new(id: moverox_sui::sui::object::UID, size: u64) -> Self
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_sui::sui::object_table::ObjectTable<K, V>
pub const fn moverox_sui::sui::object_table::ObjectTable<K, V>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag, type_v: <V as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::object_table::ObjectTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K, V> moverox_traits::HasKey for moverox_sui::sui::object_table::ObjectTable<K, V>
pub fn moverox_sui::sui::object_table::ObjectTable<K, V>::address(&self) -> moverox_types::address::Address
impl<K: moverox_traits::ConstTypeTag, V: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::object_table::ObjectTable<K, V>
pub const moverox_sui::sui::object_table::ObjectTable<K, V>::STRUCT_TAG: moverox_sui::sui::object_table::ObjectTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::object_table::ObjectTable<K, V>
pub type moverox_sui::sui::object_table::ObjectTable<K, V>::StructTag = moverox_sui::sui::object_table::ObjectTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::object_table::ObjectTable<K, V>
pub type moverox_sui::sui::object_table::ObjectTable<K, V>::TypeTag = moverox_sui::sui::object_table::ObjectTableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::object_table::ObjectTableTypeTag<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::object_table::ObjectTableTypeTag::type_k: K
pub moverox_sui::sui::object_table::ObjectTableTypeTag::type_v: V
impl<'de, K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub fn moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub fn moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub type moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub const moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub const moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub const moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub fn moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>
pub fn moverox_sui::sui::object_table::ObjectTableTypeTag<K, V>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::package
pub struct moverox_sui::sui::package::Publisher
pub moverox_sui::sui::package::Publisher::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::package::Publisher::module_name: moverox_sui::move_stdlib::ascii::String
pub moverox_sui::sui::package::Publisher::package: moverox_sui::move_stdlib::ascii::String
impl moverox_sui::sui::package::Publisher
pub const fn moverox_sui::sui::package::Publisher::new(id: moverox_sui::sui::object::UID, package: moverox_sui::move_stdlib::ascii::String, module_name: moverox_sui::move_stdlib::ascii::String) -> Self
impl moverox_sui::sui::package::Publisher
pub const fn moverox_sui::sui::package::Publisher::type_tag() -> moverox_sui::sui::package::PublisherTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::package::Publisher
pub const moverox_sui::sui::package::Publisher::STRUCT_TAG: moverox_sui::sui::package::PublisherTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::package::Publisher
pub fn moverox_sui::sui::package::Publisher::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::package::Publisher
pub type moverox_sui::sui::package::Publisher::StructTag = moverox_sui::sui::package::PublisherTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::package::Publisher
pub type moverox_sui::sui::package::Publisher::TypeTag = moverox_sui::sui::package::PublisherTypeTag
pub struct moverox_sui::sui::package::PublisherTypeTag
impl core::fmt::Display for moverox_sui::sui::package::PublisherTypeTag
pub fn moverox_sui::sui::package::PublisherTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::package::PublisherTypeTag
pub type moverox_sui::sui::package::PublisherTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::package::PublisherTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::package::PublisherTypeTag
pub const moverox_sui::sui::package::PublisherTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::package::PublisherTypeTag
pub const moverox_sui::sui::package::PublisherTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::package::PublisherTypeTag
pub const moverox_sui::sui::package::PublisherTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::package::PublisherTypeTag
pub fn moverox_sui::sui::package::PublisherTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::package::PublisherTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::package::PublisherTypeTag
pub fn moverox_sui::sui::package::PublisherTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::package::PublisherTypeTag
pub fn moverox_sui::sui::package::PublisherTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::package::UpgradeCap
pub moverox_sui::sui::package::UpgradeCap::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::package::UpgradeCap::package: moverox_sui::sui::object::ID
pub moverox_sui::sui::package::UpgradeCap::policy: u8
pub moverox_sui::sui::package::UpgradeCap::version: u64
impl moverox_sui::sui::package::UpgradeCap
pub const fn moverox_sui::sui::package::UpgradeCap::new(id: moverox_sui::sui::object::UID, package: moverox_sui::sui::object::ID, version: u64, policy: u8) -> Self
impl moverox_sui::sui::package::UpgradeCap
pub const fn moverox_sui::sui::package::UpgradeCap::type_tag() -> moverox_sui::sui::package::UpgradeCapTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::package::UpgradeCap
pub const moverox_sui::sui::package::UpgradeCap::STRUCT_TAG: moverox_sui::sui::package::UpgradeCapTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::package::UpgradeCap
pub fn moverox_sui::sui::package::UpgradeCap::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::package::UpgradeCap
pub type moverox_sui::sui::package::UpgradeCap::StructTag = moverox_sui::sui::package::UpgradeCapTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::package::UpgradeCap
pub type moverox_sui::sui::package::UpgradeCap::TypeTag = moverox_sui::sui::package::UpgradeCapTypeTag
pub struct moverox_sui::sui::package::UpgradeCapTypeTag
impl core::fmt::Display for moverox_sui::sui::package::UpgradeCapTypeTag
pub fn moverox_sui::sui::package::UpgradeCapTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::package::UpgradeCapTypeTag
pub type moverox_sui::sui::package::UpgradeCapTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::package::UpgradeCapTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::package::UpgradeCapTypeTag
pub const moverox_sui::sui::package::UpgradeCapTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::package::UpgradeCapTypeTag
pub const moverox_sui::sui::package::UpgradeCapTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::package::UpgradeCapTypeTag
pub const moverox_sui::sui::package::UpgradeCapTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::package::UpgradeCapTypeTag
pub fn moverox_sui::sui::package::UpgradeCapTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::package::UpgradeCapTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::package::UpgradeCapTypeTag
pub fn moverox_sui::sui::package::UpgradeCapTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::package::UpgradeCapTypeTag
pub fn moverox_sui::sui::package::UpgradeCapTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::package::UpgradeReceipt
pub moverox_sui::sui::package::UpgradeReceipt::cap: moverox_sui::sui::object::ID
pub moverox_sui::sui::package::UpgradeReceipt::package: moverox_sui::sui::object::ID
impl moverox_sui::sui::package::UpgradeReceipt
pub const fn moverox_sui::sui::package::UpgradeReceipt::new(cap: moverox_sui::sui::object::ID, package: moverox_sui::sui::object::ID) -> Self
impl moverox_sui::sui::package::UpgradeReceipt
pub const fn moverox_sui::sui::package::UpgradeReceipt::type_tag() -> moverox_sui::sui::package::UpgradeReceiptTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::package::UpgradeReceipt
pub const moverox_sui::sui::package::UpgradeReceipt::STRUCT_TAG: moverox_sui::sui::package::UpgradeReceiptTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::package::UpgradeReceipt
pub type moverox_sui::sui::package::UpgradeReceipt::StructTag = moverox_sui::sui::package::UpgradeReceiptTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::package::UpgradeReceipt
pub type moverox_sui::sui::package::UpgradeReceipt::TypeTag = moverox_sui::sui::package::UpgradeReceiptTypeTag
pub struct moverox_sui::sui::package::UpgradeReceiptTypeTag
impl core::fmt::Display for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub fn moverox_sui::sui::package::UpgradeReceiptTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub type moverox_sui::sui::package::UpgradeReceiptTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::package::UpgradeReceiptTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub const moverox_sui::sui::package::UpgradeReceiptTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub const moverox_sui::sui::package::UpgradeReceiptTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub const moverox_sui::sui::package::UpgradeReceiptTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub fn moverox_sui::sui::package::UpgradeReceiptTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::package::UpgradeReceiptTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub fn moverox_sui::sui::package::UpgradeReceiptTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::package::UpgradeReceiptTypeTag
pub fn moverox_sui::sui::package::UpgradeReceiptTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::package::UpgradeTicket
pub moverox_sui::sui::package::UpgradeTicket::cap: moverox_sui::sui::object::ID
pub moverox_sui::sui::package::UpgradeTicket::digest: alloc::vec::Vec<u8>
pub moverox_sui::sui::package::UpgradeTicket::package: moverox_sui::sui::object::ID
pub moverox_sui::sui::package::UpgradeTicket::policy: u8
impl moverox_sui::sui::package::UpgradeTicket
pub const fn moverox_sui::sui::package::UpgradeTicket::new(cap: moverox_sui::sui::object::ID, package: moverox_sui::sui::object::ID, policy: u8, digest: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::sui::package::UpgradeTicket
pub const fn moverox_sui::sui::package::UpgradeTicket::type_tag() -> moverox_sui::sui::package::UpgradeTicketTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::package::UpgradeTicket
pub const moverox_sui::sui::package::UpgradeTicket::STRUCT_TAG: moverox_sui::sui::package::UpgradeTicketTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::package::UpgradeTicket
pub type moverox_sui::sui::package::UpgradeTicket::StructTag = moverox_sui::sui::package::UpgradeTicketTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::package::UpgradeTicket
pub type moverox_sui::sui::package::UpgradeTicket::TypeTag = moverox_sui::sui::package::UpgradeTicketTypeTag
pub struct moverox_sui::sui::package::UpgradeTicketTypeTag
impl core::fmt::Display for moverox_sui::sui::package::UpgradeTicketTypeTag
pub fn moverox_sui::sui::package::UpgradeTicketTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::package::UpgradeTicketTypeTag
pub type moverox_sui::sui::package::UpgradeTicketTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::package::UpgradeTicketTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::package::UpgradeTicketTypeTag
pub const moverox_sui::sui::package::UpgradeTicketTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::package::UpgradeTicketTypeTag
pub const moverox_sui::sui::package::UpgradeTicketTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::package::UpgradeTicketTypeTag
pub const moverox_sui::sui::package::UpgradeTicketTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::package::UpgradeTicketTypeTag
pub fn moverox_sui::sui::package::UpgradeTicketTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::package::UpgradeTicketTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::package::UpgradeTicketTypeTag
pub fn moverox_sui::sui::package::UpgradeTicketTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::package::UpgradeTicketTypeTag
pub fn moverox_sui::sui::package::UpgradeTicketTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::party
pub struct moverox_sui::sui::party::Party
pub moverox_sui::sui::party::Party::default: moverox_sui::sui::party::Permissions
pub moverox_sui::sui::party::Party::members: moverox_sui::sui::vec_map::VecMap<moverox_types::address::Address, moverox_sui::sui::party::Permissions>
impl moverox_sui::sui::party::Party
pub const fn moverox_sui::sui::party::Party::new(default: moverox_sui::sui::party::Permissions, members: moverox_sui::sui::vec_map::VecMap<moverox_types::address::Address, moverox_sui::sui::party::Permissions>) -> Self
impl moverox_sui::sui::party::Party
pub const fn moverox_sui::sui::party::Party::type_tag() -> moverox_sui::sui::party::PartyTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::party::Party
pub const moverox_sui::sui::party::Party::STRUCT_TAG: moverox_sui::sui::party::PartyTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::party::Party
pub type moverox_sui::sui::party::Party::StructTag = moverox_sui::sui::party::PartyTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::party::Party
pub type moverox_sui::sui::party::Party::TypeTag = moverox_sui::sui::party::PartyTypeTag
pub struct moverox_sui::sui::party::PartyTypeTag
impl core::fmt::Display for moverox_sui::sui::party::PartyTypeTag
pub fn moverox_sui::sui::party::PartyTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::party::PartyTypeTag
pub type moverox_sui::sui::party::PartyTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::party::PartyTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::party::PartyTypeTag
pub const moverox_sui::sui::party::PartyTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::party::PartyTypeTag
pub const moverox_sui::sui::party::PartyTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::party::PartyTypeTag
pub const moverox_sui::sui::party::PartyTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::party::PartyTypeTag
pub fn moverox_sui::sui::party::PartyTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::party::PartyTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::party::PartyTypeTag
pub fn moverox_sui::sui::party::PartyTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::party::PartyTypeTag
pub fn moverox_sui::sui::party::PartyTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::party::Permissions(pub u64)
impl moverox_sui::sui::party::Permissions
pub const fn moverox_sui::sui::party::Permissions::new(_0: u64) -> Self
impl moverox_sui::sui::party::Permissions
pub const fn moverox_sui::sui::party::Permissions::type_tag() -> moverox_sui::sui::party::PermissionsTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::party::Permissions
pub const moverox_sui::sui::party::Permissions::STRUCT_TAG: moverox_sui::sui::party::PermissionsTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::party::Permissions
pub type moverox_sui::sui::party::Permissions::StructTag = moverox_sui::sui::party::PermissionsTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::party::Permissions
pub type moverox_sui::sui::party::Permissions::TypeTag = moverox_sui::sui::party::PermissionsTypeTag
pub struct moverox_sui::sui::party::PermissionsTypeTag
impl core::fmt::Display for moverox_sui::sui::party::PermissionsTypeTag
pub fn moverox_sui::sui::party::PermissionsTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::party::PermissionsTypeTag
pub type moverox_sui::sui::party::PermissionsTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::party::PermissionsTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::party::PermissionsTypeTag
pub const moverox_sui::sui::party::PermissionsTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::party::PermissionsTypeTag
pub const moverox_sui::sui::party::PermissionsTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::party::PermissionsTypeTag
pub const moverox_sui::sui::party::PermissionsTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::party::PermissionsTypeTag
pub fn moverox_sui::sui::party::PermissionsTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::party::PermissionsTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::party::PermissionsTypeTag
pub fn moverox_sui::sui::party::PermissionsTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::party::PermissionsTypeTag
pub fn moverox_sui::sui::party::PermissionsTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::priority_queue
pub struct moverox_sui::sui::priority_queue::Entry<T>
pub moverox_sui::sui::priority_queue::Entry::priority: u64
pub moverox_sui::sui::priority_queue::Entry::value: T
impl<T: moverox_traits::MoveType> moverox_sui::sui::priority_queue::Entry<T>
pub const fn moverox_sui::sui::priority_queue::Entry<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::priority_queue::EntryTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::priority_queue::Entry<T>
pub const fn moverox_sui::sui::priority_queue::Entry<T>::new(priority: u64, value: T) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::priority_queue::Entry<T>
pub const moverox_sui::sui::priority_queue::Entry<T>::STRUCT_TAG: moverox_sui::sui::priority_queue::EntryTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::priority_queue::Entry<T>
pub type moverox_sui::sui::priority_queue::Entry<T>::StructTag = moverox_sui::sui::priority_queue::EntryTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::priority_queue::Entry<T>
pub type moverox_sui::sui::priority_queue::Entry<T>::TypeTag = moverox_sui::sui::priority_queue::EntryTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::priority_queue::EntryTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::priority_queue::EntryTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub fn moverox_sui::sui::priority_queue::EntryTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub fn moverox_sui::sui::priority_queue::EntryTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub type moverox_sui::sui::priority_queue::EntryTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::priority_queue::EntryTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub const moverox_sui::sui::priority_queue::EntryTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub const moverox_sui::sui::priority_queue::EntryTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub const moverox_sui::sui::priority_queue::EntryTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub fn moverox_sui::sui::priority_queue::EntryTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::priority_queue::EntryTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::priority_queue::EntryTypeTag<T>
pub fn moverox_sui::sui::priority_queue::EntryTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::priority_queue::PriorityQueue<T>
pub moverox_sui::sui::priority_queue::PriorityQueue::entries: alloc::vec::Vec<moverox_sui::sui::priority_queue::Entry<T>>
impl<T: moverox_traits::MoveType> moverox_sui::sui::priority_queue::PriorityQueue<T>
pub const fn moverox_sui::sui::priority_queue::PriorityQueue<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::priority_queue::PriorityQueueTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::priority_queue::PriorityQueue<T>
pub const fn moverox_sui::sui::priority_queue::PriorityQueue<T>::new(entries: alloc::vec::Vec<moverox_sui::sui::priority_queue::Entry<T>>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::priority_queue::PriorityQueue<T>
pub const moverox_sui::sui::priority_queue::PriorityQueue<T>::STRUCT_TAG: moverox_sui::sui::priority_queue::PriorityQueueTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::priority_queue::PriorityQueue<T>
pub type moverox_sui::sui::priority_queue::PriorityQueue<T>::StructTag = moverox_sui::sui::priority_queue::PriorityQueueTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::priority_queue::PriorityQueue<T>
pub type moverox_sui::sui::priority_queue::PriorityQueue<T>::TypeTag = moverox_sui::sui::priority_queue::PriorityQueueTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::priority_queue::PriorityQueueTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub fn moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub fn moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub type moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub const moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub const moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub const moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub fn moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>
pub fn moverox_sui::sui::priority_queue::PriorityQueueTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::random
pub struct moverox_sui::sui::random::Random
pub moverox_sui::sui::random::Random::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::random::Random::inner: moverox_sui::sui::versioned::Versioned
impl moverox_sui::sui::random::Random
pub const fn moverox_sui::sui::random::Random::new(id: moverox_sui::sui::object::UID, inner: moverox_sui::sui::versioned::Versioned) -> Self
impl moverox_sui::sui::random::Random
pub const fn moverox_sui::sui::random::Random::type_tag() -> moverox_sui::sui::random::RandomTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::random::Random
pub const moverox_sui::sui::random::Random::STRUCT_TAG: moverox_sui::sui::random::RandomTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::random::Random
pub fn moverox_sui::sui::random::Random::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::random::Random
pub type moverox_sui::sui::random::Random::StructTag = moverox_sui::sui::random::RandomTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::random::Random
pub type moverox_sui::sui::random::Random::TypeTag = moverox_sui::sui::random::RandomTypeTag
pub struct moverox_sui::sui::random::RandomGenerator
pub moverox_sui::sui::random::RandomGenerator::buffer: alloc::vec::Vec<u8>
pub moverox_sui::sui::random::RandomGenerator::counter: u16
pub moverox_sui::sui::random::RandomGenerator::seed: alloc::vec::Vec<u8>
impl moverox_sui::sui::random::RandomGenerator
pub const fn moverox_sui::sui::random::RandomGenerator::new(seed: alloc::vec::Vec<u8>, counter: u16, buffer: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::sui::random::RandomGenerator
pub const fn moverox_sui::sui::random::RandomGenerator::type_tag() -> moverox_sui::sui::random::RandomGeneratorTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::random::RandomGenerator
pub const moverox_sui::sui::random::RandomGenerator::STRUCT_TAG: moverox_sui::sui::random::RandomGeneratorTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::random::RandomGenerator
pub type moverox_sui::sui::random::RandomGenerator::StructTag = moverox_sui::sui::random::RandomGeneratorTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::random::RandomGenerator
pub type moverox_sui::sui::random::RandomGenerator::TypeTag = moverox_sui::sui::random::RandomGeneratorTypeTag
pub struct moverox_sui::sui::random::RandomGeneratorTypeTag
impl core::fmt::Display for moverox_sui::sui::random::RandomGeneratorTypeTag
pub fn moverox_sui::sui::random::RandomGeneratorTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::random::RandomGeneratorTypeTag
pub type moverox_sui::sui::random::RandomGeneratorTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::random::RandomGeneratorTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::random::RandomGeneratorTypeTag
pub const moverox_sui::sui::random::RandomGeneratorTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::random::RandomGeneratorTypeTag
pub const moverox_sui::sui::random::RandomGeneratorTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::random::RandomGeneratorTypeTag
pub const moverox_sui::sui::random::RandomGeneratorTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::random::RandomGeneratorTypeTag
pub fn moverox_sui::sui::random::RandomGeneratorTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::random::RandomGeneratorTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::random::RandomGeneratorTypeTag
pub fn moverox_sui::sui::random::RandomGeneratorTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::random::RandomGeneratorTypeTag
pub fn moverox_sui::sui::random::RandomGeneratorTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::random::RandomInner
pub moverox_sui::sui::random::RandomInner::epoch: u64
pub moverox_sui::sui::random::RandomInner::random_bytes: alloc::vec::Vec<u8>
pub moverox_sui::sui::random::RandomInner::randomness_round: u64
pub moverox_sui::sui::random::RandomInner::version: u64
impl moverox_sui::sui::random::RandomInner
pub const fn moverox_sui::sui::random::RandomInner::new(version: u64, epoch: u64, randomness_round: u64, random_bytes: alloc::vec::Vec<u8>) -> Self
impl moverox_sui::sui::random::RandomInner
pub const fn moverox_sui::sui::random::RandomInner::type_tag() -> moverox_sui::sui::random::RandomInnerTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::random::RandomInner
pub const moverox_sui::sui::random::RandomInner::STRUCT_TAG: moverox_sui::sui::random::RandomInnerTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::random::RandomInner
pub type moverox_sui::sui::random::RandomInner::StructTag = moverox_sui::sui::random::RandomInnerTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::random::RandomInner
pub type moverox_sui::sui::random::RandomInner::TypeTag = moverox_sui::sui::random::RandomInnerTypeTag
pub struct moverox_sui::sui::random::RandomInnerTypeTag
impl core::fmt::Display for moverox_sui::sui::random::RandomInnerTypeTag
pub fn moverox_sui::sui::random::RandomInnerTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::random::RandomInnerTypeTag
pub type moverox_sui::sui::random::RandomInnerTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::random::RandomInnerTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::random::RandomInnerTypeTag
pub const moverox_sui::sui::random::RandomInnerTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::random::RandomInnerTypeTag
pub const moverox_sui::sui::random::RandomInnerTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::random::RandomInnerTypeTag
pub const moverox_sui::sui::random::RandomInnerTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::random::RandomInnerTypeTag
pub fn moverox_sui::sui::random::RandomInnerTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::random::RandomInnerTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::random::RandomInnerTypeTag
pub fn moverox_sui::sui::random::RandomInnerTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::random::RandomInnerTypeTag
pub fn moverox_sui::sui::random::RandomInnerTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::random::RandomTypeTag
impl core::fmt::Display for moverox_sui::sui::random::RandomTypeTag
pub fn moverox_sui::sui::random::RandomTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::random::RandomTypeTag
pub type moverox_sui::sui::random::RandomTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::random::RandomTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::random::RandomTypeTag
pub const moverox_sui::sui::random::RandomTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::random::RandomTypeTag
pub const moverox_sui::sui::random::RandomTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::random::RandomTypeTag
pub const moverox_sui::sui::random::RandomTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::random::RandomTypeTag
pub fn moverox_sui::sui::random::RandomTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::random::RandomTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::random::RandomTypeTag
pub fn moverox_sui::sui::random::RandomTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::random::RandomTypeTag
pub fn moverox_sui::sui::random::RandomTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::sui
pub struct moverox_sui::sui::sui::SUI
impl moverox_sui::sui::sui::SUI
pub const fn moverox_sui::sui::sui::SUI::new() -> Self
impl moverox_sui::sui::sui::SUI
pub const fn moverox_sui::sui::sui::SUI::type_tag() -> moverox_sui::sui::sui::SUITypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::sui::SUI
pub const moverox_sui::sui::sui::SUI::STRUCT_TAG: moverox_sui::sui::sui::SUITypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::sui::SUI
pub type moverox_sui::sui::sui::SUI::StructTag = moverox_sui::sui::sui::SUITypeTag
impl moverox_traits::MoveType for moverox_sui::sui::sui::SUI
pub type moverox_sui::sui::sui::SUI::TypeTag = moverox_sui::sui::sui::SUITypeTag
pub struct moverox_sui::sui::sui::SUITypeTag
impl core::fmt::Display for moverox_sui::sui::sui::SUITypeTag
pub fn moverox_sui::sui::sui::SUITypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::sui::SUITypeTag
pub type moverox_sui::sui::sui::SUITypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::sui::SUITypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::sui::SUITypeTag
pub const moverox_sui::sui::sui::SUITypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::sui::SUITypeTag
pub const moverox_sui::sui::sui::SUITypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::sui::SUITypeTag
pub const moverox_sui::sui::sui::SUITypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::sui::SUITypeTag
pub fn moverox_sui::sui::sui::SUITypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::sui::SUITypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::sui::SUITypeTag
pub fn moverox_sui::sui::sui::SUITypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::sui::SUITypeTag
pub fn moverox_sui::sui::sui::SUITypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::table
pub struct moverox_sui::sui::table::Table<K, V>
pub moverox_sui::sui::table::Table::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::table::Table::size: u64
impl<K, V> moverox_sui::sui::table::Table<K, V>
pub const fn moverox_sui::sui::table::Table<K, V>::new(id: moverox_sui::sui::object::UID, size: u64) -> Self
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_sui::sui::table::Table<K, V>
pub const fn moverox_sui::sui::table::Table<K, V>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag, type_v: <V as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::table::TableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K, V> moverox_traits::HasKey for moverox_sui::sui::table::Table<K, V>
pub fn moverox_sui::sui::table::Table<K, V>::address(&self) -> moverox_types::address::Address
impl<K: moverox_traits::ConstTypeTag, V: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::table::Table<K, V>
pub const moverox_sui::sui::table::Table<K, V>::STRUCT_TAG: moverox_sui::sui::table::TableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::table::Table<K, V>
pub type moverox_sui::sui::table::Table<K, V>::StructTag = moverox_sui::sui::table::TableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::table::Table<K, V>
pub type moverox_sui::sui::table::Table<K, V>::TypeTag = moverox_sui::sui::table::TableTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::table::TableTypeTag<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::table::TableTypeTag::type_k: K
pub moverox_sui::sui::table::TableTypeTag::type_v: V
impl<'de, K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::table::TableTypeTag<K, V>
pub fn moverox_sui::sui::table::TableTypeTag<K, V>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::table::TableTypeTag<K, V>
pub fn moverox_sui::sui::table::TableTypeTag<K, V>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::table::TableTypeTag<K, V>
pub type moverox_sui::sui::table::TableTypeTag<K, V>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::table::TableTypeTag<K, V>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::table::TableTypeTag<K, V>
pub const moverox_sui::sui::table::TableTypeTag<K, V>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::table::TableTypeTag<K, V>
pub const moverox_sui::sui::table::TableTypeTag<K, V>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::table::TableTypeTag<K, V>
pub const moverox_sui::sui::table::TableTypeTag<K, V>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::table::TableTypeTag<K, V>
pub fn moverox_sui::sui::table::TableTypeTag<K, V>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::table::TableTypeTag<K, V>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::table::TableTypeTag<K, V>
pub fn moverox_sui::sui::table::TableTypeTag<K, V>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::table_vec
pub struct moverox_sui::sui::table_vec::TableVec<Element>
pub moverox_sui::sui::table_vec::TableVec::contents: moverox_sui::sui::table::Table<u64, Element>
impl<Element: moverox_traits::MoveType> moverox_sui::sui::table_vec::TableVec<Element>
pub const fn moverox_sui::sui::table_vec::TableVec<Element>::type_tag(type_element: <Element as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::table_vec::TableVecTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
impl<Element> moverox_sui::sui::table_vec::TableVec<Element>
pub const fn moverox_sui::sui::table_vec::TableVec<Element>::new(contents: moverox_sui::sui::table::Table<u64, Element>) -> Self
impl<Element: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::table_vec::TableVec<Element>
pub const moverox_sui::sui::table_vec::TableVec<Element>::STRUCT_TAG: moverox_sui::sui::table_vec::TableVecTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
impl<Element: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::table_vec::TableVec<Element>
pub type moverox_sui::sui::table_vec::TableVec<Element>::StructTag = moverox_sui::sui::table_vec::TableVecTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
impl<Element: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::table_vec::TableVec<Element>
pub type moverox_sui::sui::table_vec::TableVec<Element>::TypeTag = moverox_sui::sui::table_vec::TableVecTypeTag<<Element as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::table_vec::TableVecTypeTag<Element: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::table_vec::TableVecTypeTag::type_element: Element
impl<'de, Element: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub fn moverox_sui::sui::table_vec::TableVecTypeTag<Element>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<Element: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub fn moverox_sui::sui::table_vec::TableVecTypeTag<Element>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<Element: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub type moverox_sui::sui::table_vec::TableVecTypeTag<Element>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::table_vec::TableVecTypeTag<Element>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub const moverox_sui::sui::table_vec::TableVecTypeTag<Element>::ADDRESS: moverox_types::address::Address
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub const moverox_sui::sui::table_vec::TableVecTypeTag<Element>::MODULE: &moverox_types::ident_str::IdentStr
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub const moverox_sui::sui::table_vec::TableVecTypeTag<Element>::NAME: &moverox_types::ident_str::IdentStr
impl<Element: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub fn moverox_sui::sui::table_vec::TableVecTypeTag<Element>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::table_vec::TableVecTypeTag<Element>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<Element: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::table_vec::TableVecTypeTag<Element>
pub fn moverox_sui::sui::table_vec::TableVecTypeTag<Element>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::token
pub struct moverox_sui::sui::token::ActionRequest<T>
pub moverox_sui::sui::token::ActionRequest::amount: u64
pub moverox_sui::sui::token::ActionRequest::approvals: moverox_sui::sui::vec_set::VecSet<moverox_sui::move_stdlib::type_name::TypeName>
pub moverox_sui::sui::token::ActionRequest::name: moverox_sui::move_stdlib::string::String
pub moverox_sui::sui::token::ActionRequest::recipient: core::option::Option<moverox_types::address::Address>
pub moverox_sui::sui::token::ActionRequest::sender: moverox_types::address::Address
pub moverox_sui::sui::token::ActionRequest::spent_balance: core::option::Option<moverox_sui::sui::balance::Balance<T>>
impl<T: moverox_traits::MoveType> moverox_sui::sui::token::ActionRequest<T>
pub const fn moverox_sui::sui::token::ActionRequest<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::token::ActionRequestTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::token::ActionRequest<T>
pub const fn moverox_sui::sui::token::ActionRequest<T>::new(name: moverox_sui::move_stdlib::string::String, amount: u64, sender: moverox_types::address::Address, recipient: core::option::Option<moverox_types::address::Address>, spent_balance: core::option::Option<moverox_sui::sui::balance::Balance<T>>, approvals: moverox_sui::sui::vec_set::VecSet<moverox_sui::move_stdlib::type_name::TypeName>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::token::ActionRequest<T>
pub const moverox_sui::sui::token::ActionRequest<T>::STRUCT_TAG: moverox_sui::sui::token::ActionRequestTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::token::ActionRequest<T>
pub type moverox_sui::sui::token::ActionRequest<T>::StructTag = moverox_sui::sui::token::ActionRequestTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::token::ActionRequest<T>
pub type moverox_sui::sui::token::ActionRequest<T>::TypeTag = moverox_sui::sui::token::ActionRequestTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::token::ActionRequestTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::token::ActionRequestTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub fn moverox_sui::sui::token::ActionRequestTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub fn moverox_sui::sui::token::ActionRequestTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub type moverox_sui::sui::token::ActionRequestTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::token::ActionRequestTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub const moverox_sui::sui::token::ActionRequestTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub const moverox_sui::sui::token::ActionRequestTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub const moverox_sui::sui::token::ActionRequestTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub fn moverox_sui::sui::token::ActionRequestTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::token::ActionRequestTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::token::ActionRequestTypeTag<T>
pub fn moverox_sui::sui::token::ActionRequestTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::token::RuleKey<T>
pub moverox_sui::sui::token::RuleKey::is_protected: bool
impl<T: moverox_traits::MoveType> moverox_sui::sui::token::RuleKey<T>
pub const fn moverox_sui::sui::token::RuleKey<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::token::RuleKeyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::token::RuleKey<T>
pub const fn moverox_sui::sui::token::RuleKey<T>::new(is_protected: bool) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::token::RuleKey<T>
pub const moverox_sui::sui::token::RuleKey<T>::STRUCT_TAG: moverox_sui::sui::token::RuleKeyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::token::RuleKey<T>
pub type moverox_sui::sui::token::RuleKey<T>::StructTag = moverox_sui::sui::token::RuleKeyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::token::RuleKey<T>
pub type moverox_sui::sui::token::RuleKey<T>::TypeTag = moverox_sui::sui::token::RuleKeyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::token::RuleKeyTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::token::RuleKeyTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub fn moverox_sui::sui::token::RuleKeyTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub fn moverox_sui::sui::token::RuleKeyTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub type moverox_sui::sui::token::RuleKeyTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::token::RuleKeyTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub const moverox_sui::sui::token::RuleKeyTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub const moverox_sui::sui::token::RuleKeyTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub const moverox_sui::sui::token::RuleKeyTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub fn moverox_sui::sui::token::RuleKeyTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::token::RuleKeyTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::token::RuleKeyTypeTag<T>
pub fn moverox_sui::sui::token::RuleKeyTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::token::Token<T>
pub moverox_sui::sui::token::Token::balance: moverox_sui::sui::balance::Balance<T>
pub moverox_sui::sui::token::Token::id: moverox_sui::sui::object::UID
impl<T: moverox_traits::MoveType> moverox_sui::sui::token::Token<T>
pub const fn moverox_sui::sui::token::Token<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::token::TokenTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::token::Token<T>
pub const fn moverox_sui::sui::token::Token<T>::new(id: moverox_sui::sui::object::UID, balance: moverox_sui::sui::balance::Balance<T>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::token::Token<T>
pub const moverox_sui::sui::token::Token<T>::STRUCT_TAG: moverox_sui::sui::token::TokenTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::token::Token<T>
pub type moverox_sui::sui::token::Token<T>::StructTag = moverox_sui::sui::token::TokenTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::token::Token<T>
pub type moverox_sui::sui::token::Token<T>::TypeTag = moverox_sui::sui::token::TokenTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::token::Token<T>
pub fn moverox_sui::sui::token::Token<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::token::TokenPolicy<T>
pub moverox_sui::sui::token::TokenPolicy::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::token::TokenPolicy::rules: moverox_sui::sui::vec_map::VecMap<moverox_sui::move_stdlib::string::String, moverox_sui::sui::vec_set::VecSet<moverox_sui::move_stdlib::type_name::TypeName>>
pub moverox_sui::sui::token::TokenPolicy::spent_balance: moverox_sui::sui::balance::Balance<T>
impl<T: moverox_traits::MoveType> moverox_sui::sui::token::TokenPolicy<T>
pub const fn moverox_sui::sui::token::TokenPolicy<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::token::TokenPolicyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::token::TokenPolicy<T>
pub const fn moverox_sui::sui::token::TokenPolicy<T>::new(id: moverox_sui::sui::object::UID, spent_balance: moverox_sui::sui::balance::Balance<T>, rules: moverox_sui::sui::vec_map::VecMap<moverox_sui::move_stdlib::string::String, moverox_sui::sui::vec_set::VecSet<moverox_sui::move_stdlib::type_name::TypeName>>) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::token::TokenPolicy<T>
pub const moverox_sui::sui::token::TokenPolicy<T>::STRUCT_TAG: moverox_sui::sui::token::TokenPolicyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::token::TokenPolicy<T>
pub type moverox_sui::sui::token::TokenPolicy<T>::StructTag = moverox_sui::sui::token::TokenPolicyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::token::TokenPolicy<T>
pub type moverox_sui::sui::token::TokenPolicy<T>::TypeTag = moverox_sui::sui::token::TokenPolicyTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::token::TokenPolicy<T>
pub fn moverox_sui::sui::token::TokenPolicy<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::token::TokenPolicyCap<T>
pub moverox_sui::sui::token::TokenPolicyCap::for: moverox_sui::sui::object::ID
pub moverox_sui::sui::token::TokenPolicyCap::id: moverox_sui::sui::object::UID
impl<T: moverox_traits::MoveType> moverox_sui::sui::token::TokenPolicyCap<T>
pub const fn moverox_sui::sui::token::TokenPolicyCap<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::token::TokenPolicyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::token::TokenPolicyCap<T>
pub const fn moverox_sui::sui::token::TokenPolicyCap<T>::new(id: moverox_sui::sui::object::UID, for: moverox_sui::sui::object::ID) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::token::TokenPolicyCap<T>
pub const moverox_sui::sui::token::TokenPolicyCap<T>::STRUCT_TAG: moverox_sui::sui::token::TokenPolicyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::token::TokenPolicyCap<T>
pub type moverox_sui::sui::token::TokenPolicyCap<T>::StructTag = moverox_sui::sui::token::TokenPolicyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::token::TokenPolicyCap<T>
pub type moverox_sui::sui::token::TokenPolicyCap<T>::TypeTag = moverox_sui::sui::token::TokenPolicyCapTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_traits::HasKey for moverox_sui::sui::token::TokenPolicyCap<T>
pub fn moverox_sui::sui::token::TokenPolicyCap<T>::address(&self) -> moverox_types::address::Address
pub struct moverox_sui::sui::token::TokenPolicyCapTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::token::TokenPolicyCapTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub type moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::token::TokenPolicyCapTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCapTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::token::TokenPolicyCreated<T>
pub moverox_sui::sui::token::TokenPolicyCreated::id: moverox_sui::sui::object::ID
pub moverox_sui::sui::token::TokenPolicyCreated::is_mutable: bool
impl<T: moverox_traits::MoveType> moverox_sui::sui::token::TokenPolicyCreated<T>
pub const fn moverox_sui::sui::token::TokenPolicyCreated<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::token::TokenPolicyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::token::TokenPolicyCreated<T>
pub const fn moverox_sui::sui::token::TokenPolicyCreated<T>::new(id: moverox_sui::sui::object::ID, is_mutable: bool) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::token::TokenPolicyCreated<T>
pub const moverox_sui::sui::token::TokenPolicyCreated<T>::STRUCT_TAG: moverox_sui::sui::token::TokenPolicyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::token::TokenPolicyCreated<T>
pub type moverox_sui::sui::token::TokenPolicyCreated<T>::StructTag = moverox_sui::sui::token::TokenPolicyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::token::TokenPolicyCreated<T>
pub type moverox_sui::sui::token::TokenPolicyCreated<T>::TypeTag = moverox_sui::sui::token::TokenPolicyCreatedTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::token::TokenPolicyCreatedTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub type moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyCreatedTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::token::TokenPolicyTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::token::TokenPolicyTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub type moverox_sui::sui::token::TokenPolicyTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::token::TokenPolicyTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub const moverox_sui::sui::token::TokenPolicyTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::token::TokenPolicyTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::token::TokenPolicyTypeTag<T>
pub fn moverox_sui::sui::token::TokenPolicyTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::token::TokenTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::token::TokenTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::token::TokenTypeTag<T>
pub fn moverox_sui::sui::token::TokenTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::token::TokenTypeTag<T>
pub fn moverox_sui::sui::token::TokenTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::token::TokenTypeTag<T>
pub type moverox_sui::sui::token::TokenTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::token::TokenTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::token::TokenTypeTag<T>
pub const moverox_sui::sui::token::TokenTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::token::TokenTypeTag<T>
pub const moverox_sui::sui::token::TokenTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::token::TokenTypeTag<T>
pub const moverox_sui::sui::token::TokenTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::token::TokenTypeTag<T>
pub fn moverox_sui::sui::token::TokenTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::token::TokenTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::token::TokenTypeTag<T>
pub fn moverox_sui::sui::token::TokenTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::transfer
pub struct moverox_sui::sui::transfer::Receiving<T>
pub moverox_sui::sui::transfer::Receiving::id: moverox_sui::sui::object::ID
pub moverox_sui::sui::transfer::Receiving::version: u64
impl<T: moverox_traits::MoveType> moverox_sui::sui::transfer::Receiving<T>
pub const fn moverox_sui::sui::transfer::Receiving<T>::type_tag(type_t: <T as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::transfer::ReceivingTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T> moverox_sui::sui::transfer::Receiving<T>
pub const fn moverox_sui::sui::transfer::Receiving<T>::new(id: moverox_sui::sui::object::ID, version: u64) -> Self
impl<T: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::transfer::Receiving<T>
pub const moverox_sui::sui::transfer::Receiving<T>::STRUCT_TAG: moverox_sui::sui::transfer::ReceivingTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::transfer::Receiving<T>
pub type moverox_sui::sui::transfer::Receiving<T>::StructTag = moverox_sui::sui::transfer::ReceivingTypeTag<<T as moverox_traits::MoveType>::TypeTag>
impl<T: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::transfer::Receiving<T>
pub type moverox_sui::sui::transfer::Receiving<T>::TypeTag = moverox_sui::sui::transfer::ReceivingTypeTag<<T as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::transfer::ReceivingTypeTag<T: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::transfer::ReceivingTypeTag::type_t: T
impl<'de, T: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub fn moverox_sui::sui::transfer::ReceivingTypeTag<T>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<T: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub fn moverox_sui::sui::transfer::ReceivingTypeTag<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub type moverox_sui::sui::transfer::ReceivingTypeTag<T>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::transfer::ReceivingTypeTag<T>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub const moverox_sui::sui::transfer::ReceivingTypeTag<T>::ADDRESS: moverox_types::address::Address
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub const moverox_sui::sui::transfer::ReceivingTypeTag<T>::MODULE: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub const moverox_sui::sui::transfer::ReceivingTypeTag<T>::NAME: &moverox_types::ident_str::IdentStr
impl<T: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub fn moverox_sui::sui::transfer::ReceivingTypeTag<T>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::transfer::ReceivingTypeTag<T>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<T: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::transfer::ReceivingTypeTag<T>
pub fn moverox_sui::sui::transfer::ReceivingTypeTag<T>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::tx_context
pub struct moverox_sui::sui::tx_context::TxContext
pub moverox_sui::sui::tx_context::TxContext::epoch: u64
pub moverox_sui::sui::tx_context::TxContext::epoch_timestamp_ms: u64
pub moverox_sui::sui::tx_context::TxContext::ids_created: u64
pub moverox_sui::sui::tx_context::TxContext::sender: moverox_types::address::Address
pub moverox_sui::sui::tx_context::TxContext::tx_hash: alloc::vec::Vec<u8>
impl moverox_sui::sui::tx_context::TxContext
pub const fn moverox_sui::sui::tx_context::TxContext::new(sender: moverox_types::address::Address, tx_hash: alloc::vec::Vec<u8>, epoch: u64, epoch_timestamp_ms: u64, ids_created: u64) -> Self
impl moverox_sui::sui::tx_context::TxContext
pub const fn moverox_sui::sui::tx_context::TxContext::type_tag() -> moverox_sui::sui::tx_context::TxContextTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::tx_context::TxContext
pub const moverox_sui::sui::tx_context::TxContext::STRUCT_TAG: moverox_sui::sui::tx_context::TxContextTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::tx_context::TxContext
pub type moverox_sui::sui::tx_context::TxContext::StructTag = moverox_sui::sui::tx_context::TxContextTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::tx_context::TxContext
pub type moverox_sui::sui::tx_context::TxContext::TypeTag = moverox_sui::sui::tx_context::TxContextTypeTag
pub struct moverox_sui::sui::tx_context::TxContextTypeTag
impl core::fmt::Display for moverox_sui::sui::tx_context::TxContextTypeTag
pub fn moverox_sui::sui::tx_context::TxContextTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::tx_context::TxContextTypeTag
pub type moverox_sui::sui::tx_context::TxContextTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::tx_context::TxContextTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::tx_context::TxContextTypeTag
pub const moverox_sui::sui::tx_context::TxContextTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::tx_context::TxContextTypeTag
pub const moverox_sui::sui::tx_context::TxContextTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::tx_context::TxContextTypeTag
pub const moverox_sui::sui::tx_context::TxContextTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::tx_context::TxContextTypeTag
pub fn moverox_sui::sui::tx_context::TxContextTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::tx_context::TxContextTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::tx_context::TxContextTypeTag
pub fn moverox_sui::sui::tx_context::TxContextTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::tx_context::TxContextTypeTag
pub fn moverox_sui::sui::tx_context::TxContextTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::url
pub struct moverox_sui::sui::url::Url
pub moverox_sui::sui::url::Url::url: moverox_sui::move_stdlib::ascii::String
impl moverox_sui::sui::url::Url
pub const fn moverox_sui::sui::url::Url::new(url: moverox_sui::move_stdlib::ascii::String) -> Self
impl moverox_sui::sui::url::Url
pub const fn moverox_sui::sui::url::Url::type_tag() -> moverox_sui::sui::url::UrlTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::url::Url
pub const moverox_sui::sui::url::Url::STRUCT_TAG: moverox_sui::sui::url::UrlTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::url::Url
pub type moverox_sui::sui::url::Url::StructTag = moverox_sui::sui::url::UrlTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::url::Url
pub type moverox_sui::sui::url::Url::TypeTag = moverox_sui::sui::url::UrlTypeTag
pub struct moverox_sui::sui::url::UrlTypeTag
impl core::fmt::Display for moverox_sui::sui::url::UrlTypeTag
pub fn moverox_sui::sui::url::UrlTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::url::UrlTypeTag
pub type moverox_sui::sui::url::UrlTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::url::UrlTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::url::UrlTypeTag
pub const moverox_sui::sui::url::UrlTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::url::UrlTypeTag
pub const moverox_sui::sui::url::UrlTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::url::UrlTypeTag
pub const moverox_sui::sui::url::UrlTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::url::UrlTypeTag
pub fn moverox_sui::sui::url::UrlTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::url::UrlTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::url::UrlTypeTag
pub fn moverox_sui::sui::url::UrlTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::url::UrlTypeTag
pub fn moverox_sui::sui::url::UrlTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub mod moverox_sui::sui::vec_map
pub struct moverox_sui::sui::vec_map::Entry<K, V>
pub moverox_sui::sui::vec_map::Entry::key: K
pub moverox_sui::sui::vec_map::Entry::value: V
impl<K, V> moverox_sui::sui::vec_map::Entry<K, V>
pub const fn moverox_sui::sui::vec_map::Entry<K, V>::new(key: K, value: V) -> Self
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_sui::sui::vec_map::Entry<K, V>
pub const fn moverox_sui::sui::vec_map::Entry<K, V>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag, type_v: <V as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::vec_map::EntryTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::ConstTypeTag, V: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::vec_map::Entry<K, V>
pub const moverox_sui::sui::vec_map::Entry<K, V>::STRUCT_TAG: moverox_sui::sui::vec_map::EntryTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::vec_map::Entry<K, V>
pub type moverox_sui::sui::vec_map::Entry<K, V>::StructTag = moverox_sui::sui::vec_map::EntryTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::vec_map::Entry<K, V>
pub type moverox_sui::sui::vec_map::Entry<K, V>::TypeTag = moverox_sui::sui::vec_map::EntryTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::vec_map::EntryTypeTag<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::vec_map::EntryTypeTag::type_k: K
pub moverox_sui::sui::vec_map::EntryTypeTag::type_v: V
impl<'de, K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::EntryTypeTag<K, V>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::EntryTypeTag<K, V>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub type moverox_sui::sui::vec_map::EntryTypeTag<K, V>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::vec_map::EntryTypeTag<K, V>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub const moverox_sui::sui::vec_map::EntryTypeTag<K, V>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub const moverox_sui::sui::vec_map::EntryTypeTag<K, V>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub const moverox_sui::sui::vec_map::EntryTypeTag<K, V>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::EntryTypeTag<K, V>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::vec_map::EntryTypeTag<K, V>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::vec_map::EntryTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::EntryTypeTag<K, V>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub struct moverox_sui::sui::vec_map::VecMap<K, V>
pub moverox_sui::sui::vec_map::VecMap::contents: alloc::vec::Vec<moverox_sui::sui::vec_map::Entry<K, V>>
impl<K, V> moverox_sui::sui::vec_map::VecMap<K, V>
pub const fn moverox_sui::sui::vec_map::VecMap<K, V>::new(contents: alloc::vec::Vec<moverox_sui::sui::vec_map::Entry<K, V>>) -> Self
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_sui::sui::vec_map::VecMap<K, V>
pub const fn moverox_sui::sui::vec_map::VecMap<K, V>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag, type_v: <V as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::vec_map::VecMapTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::ConstTypeTag, V: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::vec_map::VecMap<K, V>
pub const moverox_sui::sui::vec_map::VecMap<K, V>::STRUCT_TAG: moverox_sui::sui::vec_map::VecMapTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::vec_map::VecMap<K, V>
pub type moverox_sui::sui::vec_map::VecMap<K, V>::StructTag = moverox_sui::sui::vec_map::VecMapTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType, V: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::vec_map::VecMap<K, V>
pub type moverox_sui::sui::vec_map::VecMap<K, V>::TypeTag = moverox_sui::sui::vec_map::VecMapTypeTag<<K as moverox_traits::MoveType>::TypeTag, <V as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::vec_map::VecMapTypeTag<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::vec_map::VecMapTypeTag::type_k: K
pub moverox_sui::sui::vec_map::VecMapTypeTag::type_v: V
impl<'de, K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub type moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub const moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub const moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub const moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag, V: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::vec_map::VecMapTypeTag<K, V>
pub fn moverox_sui::sui::vec_map::VecMapTypeTag<K, V>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::vec_set
pub struct moverox_sui::sui::vec_set::VecSet<K>
pub moverox_sui::sui::vec_set::VecSet::contents: alloc::vec::Vec<K>
impl<K: moverox_traits::MoveType> moverox_sui::sui::vec_set::VecSet<K>
pub const fn moverox_sui::sui::vec_set::VecSet<K>::type_tag(type_k: <K as moverox_traits::MoveType>::TypeTag) -> moverox_sui::sui::vec_set::VecSetTypeTag<<K as moverox_traits::MoveType>::TypeTag>
impl<K> moverox_sui::sui::vec_set::VecSet<K>
pub const fn moverox_sui::sui::vec_set::VecSet<K>::new(contents: alloc::vec::Vec<K>) -> Self
impl<K: moverox_traits::ConstTypeTag> moverox_traits::ConstStructTag for moverox_sui::sui::vec_set::VecSet<K>
pub const moverox_sui::sui::vec_set::VecSet<K>::STRUCT_TAG: moverox_sui::sui::vec_set::VecSetTypeTag<<K as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType> moverox_traits::MoveDatatype for moverox_sui::sui::vec_set::VecSet<K>
pub type moverox_sui::sui::vec_set::VecSet<K>::StructTag = moverox_sui::sui::vec_set::VecSetTypeTag<<K as moverox_traits::MoveType>::TypeTag>
impl<K: moverox_traits::MoveType> moverox_traits::MoveType for moverox_sui::sui::vec_set::VecSet<K>
pub type moverox_sui::sui::vec_set::VecSet<K>::TypeTag = moverox_sui::sui::vec_set::VecSetTypeTag<<K as moverox_traits::MoveType>::TypeTag>
pub struct moverox_sui::sui::vec_set::VecSetTypeTag<K: moverox_traits::MoveTypeTag>
pub moverox_sui::sui::vec_set::VecSetTypeTag::type_k: K
impl<'de, K: moverox_traits::MoveTypeTag> serde::de::Deserialize<'de> for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub fn moverox_sui::sui::vec_set::VecSetTypeTag<K>::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
impl<K: moverox_traits::MoveTypeTag> core::fmt::Display for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub fn moverox_sui::sui::vec_set::VecSetTypeTag<K>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<K: moverox_traits::MoveTypeTag> core::str::traits::FromStr for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub type moverox_sui::sui::vec_set::VecSetTypeTag<K>::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::vec_set::VecSetTypeTag<K>::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl<K: moverox_traits::MoveTypeTag> moverox_traits::ConstAddress for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub const moverox_sui::sui::vec_set::VecSetTypeTag<K>::ADDRESS: moverox_types::address::Address
impl<K: moverox_traits::MoveTypeTag> moverox_traits::ConstModule for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub const moverox_sui::sui::vec_set::VecSetTypeTag<K>::MODULE: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag> moverox_traits::ConstName for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub const moverox_sui::sui::vec_set::VecSetTypeTag<K>::NAME: &moverox_types::ident_str::IdentStr
impl<K: moverox_traits::MoveTypeTag> moverox_traits::MoveDatatypeTag for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub fn moverox_sui::sui::vec_set::VecSetTypeTag<K>::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::vec_set::VecSetTypeTag<K>::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl<K: moverox_traits::MoveTypeTag> serde::ser::Serialize for moverox_sui::sui::vec_set::VecSetTypeTag<K>
pub fn moverox_sui::sui::vec_set::VecSetTypeTag<K>::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
pub mod moverox_sui::sui::versioned
pub struct moverox_sui::sui::versioned::VersionChangeCap
pub moverox_sui::sui::versioned::VersionChangeCap::old_version: u64
pub moverox_sui::sui::versioned::VersionChangeCap::versioned_id: moverox_sui::sui::object::ID
impl moverox_sui::sui::versioned::VersionChangeCap
pub const fn moverox_sui::sui::versioned::VersionChangeCap::new(versioned_id: moverox_sui::sui::object::ID, old_version: u64) -> Self
impl moverox_sui::sui::versioned::VersionChangeCap
pub const fn moverox_sui::sui::versioned::VersionChangeCap::type_tag() -> moverox_sui::sui::versioned::VersionChangeCapTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::versioned::VersionChangeCap
pub const moverox_sui::sui::versioned::VersionChangeCap::STRUCT_TAG: moverox_sui::sui::versioned::VersionChangeCapTypeTag
impl moverox_traits::MoveDatatype for moverox_sui::sui::versioned::VersionChangeCap
pub type moverox_sui::sui::versioned::VersionChangeCap::StructTag = moverox_sui::sui::versioned::VersionChangeCapTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::versioned::VersionChangeCap
pub type moverox_sui::sui::versioned::VersionChangeCap::TypeTag = moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub struct moverox_sui::sui::versioned::VersionChangeCapTypeTag
impl core::fmt::Display for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub fn moverox_sui::sui::versioned::VersionChangeCapTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub type moverox_sui::sui::versioned::VersionChangeCapTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::versioned::VersionChangeCapTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub const moverox_sui::sui::versioned::VersionChangeCapTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub const moverox_sui::sui::versioned::VersionChangeCapTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub const moverox_sui::sui::versioned::VersionChangeCapTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub fn moverox_sui::sui::versioned::VersionChangeCapTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::versioned::VersionChangeCapTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub fn moverox_sui::sui::versioned::VersionChangeCapTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::versioned::VersionChangeCapTypeTag
pub fn moverox_sui::sui::versioned::VersionChangeCapTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
pub struct moverox_sui::sui::versioned::Versioned
pub moverox_sui::sui::versioned::Versioned::id: moverox_sui::sui::object::UID
pub moverox_sui::sui::versioned::Versioned::version: u64
impl moverox_sui::sui::versioned::Versioned
pub const fn moverox_sui::sui::versioned::Versioned::new(id: moverox_sui::sui::object::UID, version: u64) -> Self
impl moverox_sui::sui::versioned::Versioned
pub const fn moverox_sui::sui::versioned::Versioned::type_tag() -> moverox_sui::sui::versioned::VersionedTypeTag
impl moverox_traits::ConstStructTag for moverox_sui::sui::versioned::Versioned
pub const moverox_sui::sui::versioned::Versioned::STRUCT_TAG: moverox_sui::sui::versioned::VersionedTypeTag
impl moverox_traits::HasKey for moverox_sui::sui::versioned::Versioned
pub fn moverox_sui::sui::versioned::Versioned::address(&self) -> moverox_types::address::Address
impl moverox_traits::MoveDatatype for moverox_sui::sui::versioned::Versioned
pub type moverox_sui::sui::versioned::Versioned::StructTag = moverox_sui::sui::versioned::VersionedTypeTag
impl moverox_traits::MoveType for moverox_sui::sui::versioned::Versioned
pub type moverox_sui::sui::versioned::Versioned::TypeTag = moverox_sui::sui::versioned::VersionedTypeTag
pub struct moverox_sui::sui::versioned::VersionedTypeTag
impl core::fmt::Display for moverox_sui::sui::versioned::VersionedTypeTag
pub fn moverox_sui::sui::versioned::VersionedTypeTag::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::str::traits::FromStr for moverox_sui::sui::versioned::VersionedTypeTag
pub type moverox_sui::sui::versioned::VersionedTypeTag::Err = moverox_traits::ParseStructTagError
pub fn moverox_sui::sui::versioned::VersionedTypeTag::from_str(s: &str) -> core::result::Result<Self, Self::Err>
impl moverox_traits::ConstAddress for moverox_sui::sui::versioned::VersionedTypeTag
pub const moverox_sui::sui::versioned::VersionedTypeTag::ADDRESS: moverox_types::address::Address
impl moverox_traits::ConstModule for moverox_sui::sui::versioned::VersionedTypeTag
pub const moverox_sui::sui::versioned::VersionedTypeTag::MODULE: &moverox_types::ident_str::IdentStr
impl moverox_traits::ConstName for moverox_sui::sui::versioned::VersionedTypeTag
pub const moverox_sui::sui::versioned::VersionedTypeTag::NAME: &moverox_types::ident_str::IdentStr
impl moverox_traits::MoveDatatypeTag for moverox_sui::sui::versioned::VersionedTypeTag
pub fn moverox_sui::sui::versioned::VersionedTypeTag::from_struct_tag(value: &moverox_types::type_tag::StructTag) -> core::result::Result<Self, moverox_traits::StructTagError>
pub fn moverox_sui::sui::versioned::VersionedTypeTag::to_struct_tag(&self) -> moverox_types::type_tag::StructTag
impl serde::ser::Serialize for moverox_sui::sui::versioned::VersionedTypeTag
pub fn moverox_sui::sui::versioned::VersionedTypeTag::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde::ser::Serializer>::Ok, <S as serde::ser::Serializer>::Error> where S: serde::ser::Serializer
impl<'de> serde::de::Deserialize<'de> for moverox_sui::sui::versioned::VersionedTypeTag
pub fn moverox_sui::sui::versioned::VersionedTypeTag::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde::de::Deserializer>::Error> where D: serde::de::Deserializer<'de>
